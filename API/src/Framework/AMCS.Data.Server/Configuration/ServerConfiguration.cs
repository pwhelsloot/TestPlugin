//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable CS1591

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Configuration;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace AMCS.Data.Server.Configuration
{
  public interface IServerConfiguration
  {
    string DataAccessType { get; }

    int? CommandTimeout { get; }

    int? CommandTimeoutExtended { get; }

    int? BulkCopyTimeout { get; }

    bool PerformanceMonitoringEnabled { get; }

    bool AzureCompatibilityEnabled { get; }

    bool? DataSynchronizationDisabled { get; }

    string CertificateSubjectName { get; }

    string CertificatePath { get; }

    string EncryptionKey { get; }

    TimeSpan SessionExpiration { get; }

    string DefaultCulture { get; }

    string DefaultUICulture { get; }

    int? ParallelDataSessionThreadCount { get; }

    bool? AuditTableEnabled { get; }

    string ApplicationInsightsInstrumentationKey { get; }

    string ApplicationInsightsLoggingLevel { get; }

    string StaticFilesOutputPath { get; }

    string StaticFilesPath { get; }

    string DefaultAppRegistrationUserName { get; }

    int? PluginUpdateRetryAfterInSeconds { get; }

    int? MaxPreCommitExecutionDurationInSeconds { get; }

    bool DisableILGeneration { get; }

    IPayConfiguration Pay { get; }
    IPlatformConfiguration Platform { get; }
    IPlatformUIConfiguration PlatformUI { get; }
    IJobSystemConfiguration JobSystem { get; }
    IBroadcastConfiguration Broadcast { get; }
    IAzureAppConfigurationConfiguration AzureAppConfiguration { get; }
    IDiagnosticsConfiguration Diagnostics { get; }
    ICommsServerProtocolsConfiguration CommsServerProtocols { get; }
    ISystemConfigurationsConfiguration SystemConfigurations { get; }
    ICommsServerConfiguration CommsServer { get; }
    IBlobStorageConfiguration BlobStorage { get; }
    IApiConfiguration Api { get; }
    ITempFileStorageConfiguration TempFileStorage { get; }
    IDataSetsConfiguration DataSets { get; }
    IPluginSystemConfiguration PluginSystem { get; }
  }

#if NETFRAMEWORK 

  public class ServerConfigurationSection : ConfigurationSection, IServerConfiguration
  {
    [ConfigurationProperty("dataAccessType", IsRequired = true)]
    public string DataAccessType
    {
      get => (string)this["dataAccessType"];
      set => this["dataAccessType"] = value;
    }

    [ConfigurationProperty("commandTimeout", IsRequired = true)]
    public int? CommandTimeout
    {
      get => (int?)this["commandTimeout"];
      set => this["commandTimeout"] = value;
    }

    [ConfigurationProperty("commandTimeoutExtended", IsRequired = true)]
    public int? CommandTimeoutExtended
    {
      get => (int?)this["commandTimeoutExtended"];
      set => this["commandTimeoutExtended"] = value;
    }

    [ConfigurationProperty("bulkCopyTimeout")]
    public int? BulkCopyTimeout
    {
      get => (int?)this["bulkCopyTimeout"];
      set => this["bulkCopyTimeout"] = value;
    }

    [ConfigurationProperty("performanceMonitoringEnabled", IsRequired = true)]
    public bool PerformanceMonitoringEnabled
    {
      get => (bool)this["performanceMonitoringEnabled"];
      set => this["performanceMonitoringEnabled"] = value;
    }

    [ConfigurationProperty("azureCompatibilityEnabled", IsRequired = true)]
    public bool AzureCompatibilityEnabled
    {
      get => (bool)this["azureCompatibilityEnabled"];
      set => this["azureCompatibilityEnabled"] = value;
    }

    [ConfigurationProperty("dataSynchronizationDisabled", IsRequired = true)]
    public bool? DataSynchronizationDisabled
    {
      get => (bool?)this["dataSynchronizationDisabled"];
      set => this["dataSynchronizationDisabled"] = value;
    }

    [ConfigurationProperty("certificateSubjectName", IsRequired = true)]
    public string CertificateSubjectName
    {
      get => (string)this["certificateSubjectName"];
      set => this["certificateSubjectName"] = value;
    }

    [ConfigurationProperty("certificatePath")]
    public string CertificatePath
    {
      get => (string)this["certificatePath"];
      set => this["certificatePath"] = value;
    }

    [ConfigurationProperty("encryptionKey", IsRequired = true)]
    public string EncryptionKey
    {
      get => (string)this["encryptionKey"];
      set => this["encryptionKey"] = value;
    }

    [ConfigurationProperty("sessionExpiration", IsRequired = true)]
    public TimeSpan SessionExpiration
    {
      get => (TimeSpan)this["sessionExpiration"];
      set => this["sessionExpiration"] = value;
    }

    [ConfigurationProperty("defaultCulture")]
    public string DefaultCulture
    {
      get => (string)this["defaultCulture"];
      set => this["defaultCulture"] = value;
    }

    [ConfigurationProperty("defaultUICulture")]
    public string DefaultUICulture
    {
      get => (string)this["defaultUICulture"];
      set => this["defaultUICulture"] = value;
    }

    [ConfigurationProperty("parallelDataSessionThreadCount")]
    public int? ParallelDataSessionThreadCount
    {
      get => (int?)this["parallelDataSessionThreadCount"];
      set => this["parallelDataSessionThreadCount"] = value;
    }

    [ConfigurationProperty("auditTableEnabled")]
    public bool? AuditTableEnabled
    {
      get => (bool?)this["auditTableEnabled"];
      set => this["auditTableEnabled"] = value;
    }

    [ConfigurationProperty("applicationInsightsInstrumentationKey", IsRequired = true)]
    public string ApplicationInsightsInstrumentationKey
    {
      get => (string)this["applicationInsightsInstrumentationKey"];
      set => this["applicationInsightsInstrumentationKey"] = value;
    }

    [ConfigurationProperty("applicationInsightsLoggingLevel")]
    public string ApplicationInsightsLoggingLevel
    {
      get => (string)this["applicationInsightsLoggingLevel"];
      set => this["applicationInsightsLoggingLevel"] = value;
    }

    [ConfigurationProperty("staticFilesOutputPath")]
    public string StaticFilesOutputPath
    {
      get => (string)this["staticFilesOutputPath"];
      set => this["staticFilesOutputPath"] = value;
    }

    [ConfigurationProperty("staticFilesPath")]
    public string StaticFilesPath
    {
      get => (string)this["staticFilesPath"];
      set => this["staticFilesPath"] = value;
    }

    [ConfigurationProperty("defaultAppRegistrationUserName")]
    public string DefaultAppRegistrationUserName
    {
      get => (string)this["defaultAppRegistrationUserName"];
      set => this["defaultAppRegistrationUserName"] = value;
    }

    [ConfigurationProperty("pluginUpdateRetryAfterInSeconds")]
    public int? PluginUpdateRetryAfterInSeconds
    {
      get => (int?)this["pluginUpdateRetryAfterInSeconds"];
      set => this["pluginUpdateRetryAfterInSeconds"] = value;
    }

    [ConfigurationProperty("maxPreCommitExecutionDurationInSeconds")]
    public int? MaxPreCommitExecutionDurationInSeconds
    {
      get => (int?)this["maxPreCommitExecutionDurationInSeconds"];
      set => this["maxPreCommitExecutionDurationInSeconds"] = value;
    }

    [ConfigurationProperty("disableILGeneration")]
    public bool DisableILGeneration
    {
      get => (bool)this["disableILGeneration"];
      set => this["disableILGeneration"] = value;
    }

    [ConfigurationProperty("pay", IsRequired = true)]
    public PayElement Pay
    {
      get => (PayElement)this["pay"];
      set => this["pay"] = value;
    }

    IPayConfiguration IServerConfiguration.Pay => Pay;

    [ConfigurationProperty("platform", IsRequired = true)]
    public PlatformElement Platform
    {
      get => (PlatformElement)this["platform"];
      set => this["platform"] = value;
    }

    IPlatformConfiguration IServerConfiguration.Platform => Platform;

    [ConfigurationProperty("platformUI", IsRequired = true)]
    public PlatformUIElement PlatformUI
    {
      get => (PlatformUIElement)this["platformUI"];
      set => this["platformUI"] = value;
    }

    IPlatformUIConfiguration IServerConfiguration.PlatformUI => PlatformUI;

    [ConfigurationProperty("jobSystem")]
    public JobSystemElement JobSystem
    {
      get => (JobSystemElement)this["jobSystem"];
      set => this["jobSystem"] = value;
    }

    IJobSystemConfiguration IServerConfiguration.JobSystem => JobSystem;

    [ConfigurationProperty("broadcast")]
    public BroadcastElement Broadcast
    {
      get => (BroadcastElement)this["broadcast"];
      set => this["broadcast"] = value;
    }

    IBroadcastConfiguration IServerConfiguration.Broadcast => Broadcast;

    [ConfigurationProperty("azureAppConfiguration")]
    public AzureAppConfigurationElement AzureAppConfiguration
    {
      get => (AzureAppConfigurationElement)this["azureAppConfiguration"];
      set => this["azureAppConfiguration"] = value;
    }

    IAzureAppConfigurationConfiguration IServerConfiguration.AzureAppConfiguration => AzureAppConfiguration;

    [ConfigurationProperty("diagnostics", IsRequired = true)]
    public DiagnosticsElement Diagnostics
    {
      get => (DiagnosticsElement)this["diagnostics"];
      set => this["diagnostics"] = value;
    }

    IDiagnosticsConfiguration IServerConfiguration.Diagnostics => Diagnostics;

    [ConfigurationProperty("commsServerProtocols")]
    public CommsServerProtocolsElement CommsServerProtocols
    {
      get => (CommsServerProtocolsElement)this["commsServerProtocols"];
      set => this["commsServerProtocols"] = value;
    }

    ICommsServerProtocolsConfiguration IServerConfiguration.CommsServerProtocols => CommsServerProtocols;

    [ConfigurationProperty("systemConfigurations", IsRequired = true)]
    public SystemConfigurationsElement SystemConfigurations
    {
      get => (SystemConfigurationsElement)this["systemConfigurations"];
      set => this["systemConfigurations"] = value;
    }

    ISystemConfigurationsConfiguration IServerConfiguration.SystemConfigurations => SystemConfigurations;

    [ConfigurationProperty("commsServer")]
    public CommsServerElement CommsServer
    {
      get => (CommsServerElement)this["commsServer"];
      set => this["commsServer"] = value;
    }

    ICommsServerConfiguration IServerConfiguration.CommsServer => CommsServer;

    [ConfigurationProperty("blobStorage")]
    public BlobStorageElement BlobStorage
    {
      get => (BlobStorageElement)this["blobStorage"];
      set => this["blobStorage"] = value;
    }

    IBlobStorageConfiguration IServerConfiguration.BlobStorage => BlobStorage;

    [ConfigurationProperty("api")]
    public ApiElement Api
    {
      get => (ApiElement)this["api"];
      set => this["api"] = value;
    }

    IApiConfiguration IServerConfiguration.Api => Api;

    [ConfigurationProperty("tempFileStorage")]
    public TempFileStorageElement TempFileStorage
    {
      get => (TempFileStorageElement)this["tempFileStorage"];
      set => this["tempFileStorage"] = value;
    }

    ITempFileStorageConfiguration IServerConfiguration.TempFileStorage => TempFileStorage;

    [ConfigurationProperty("dataSets")]
    public DataSetsElement DataSets
    {
      get => (DataSetsElement)this["dataSets"];
      set => this["dataSets"] = value;
    }

    IDataSetsConfiguration IServerConfiguration.DataSets => DataSets;

    [ConfigurationProperty("pluginSystem")]
    public PluginSystemElement PluginSystem
    {
      get => (PluginSystemElement)this["pluginSystem"];
      set => this["pluginSystem"] = value;
    }

    IPluginSystemConfiguration IServerConfiguration.PluginSystem => PluginSystem;

  }

#else

  public class ServerConfigurationSection : IServerConfiguration
  { 
    public string DataAccessType { get; }

    public int? CommandTimeout { get; }

    public int? CommandTimeoutExtended { get; }

    public int? BulkCopyTimeout { get; }

    public bool PerformanceMonitoringEnabled { get; }

    public bool AzureCompatibilityEnabled { get; }

    public bool? DataSynchronizationDisabled { get; }

    public string CertificateSubjectName { get; }

    public string CertificatePath { get; }

    public string EncryptionKey { get; }

    public TimeSpan SessionExpiration { get; }

    public string DefaultCulture { get; }

    public string DefaultUICulture { get; }

    public int? ParallelDataSessionThreadCount { get; }

    public bool? AuditTableEnabled { get; }

    public string ApplicationInsightsInstrumentationKey { get; }

    public string ApplicationInsightsLoggingLevel { get; }

    public string StaticFilesOutputPath { get; }

    public string StaticFilesPath { get; }

    public string DefaultAppRegistrationUserName { get; }

    public int? PluginUpdateRetryAfterInSeconds { get; }

    public int? MaxPreCommitExecutionDurationInSeconds { get; }

    public bool DisableILGeneration { get; }

    public IPayConfiguration Pay { get; }

    public IPlatformConfiguration Platform { get; }

    public IPlatformUIConfiguration PlatformUI { get; }

    public IJobSystemConfiguration JobSystem { get; }

    public IBroadcastConfiguration Broadcast { get; }

    public IAzureAppConfigurationConfiguration AzureAppConfiguration { get; }

    public IDiagnosticsConfiguration Diagnostics { get; }

    public ICommsServerProtocolsConfiguration CommsServerProtocols { get; }

    public ISystemConfigurationsConfiguration SystemConfigurations { get; }

    public ICommsServerConfiguration CommsServer { get; }

    public IBlobStorageConfiguration BlobStorage { get; }

    public IApiConfiguration Api { get; }

    public ITempFileStorageConfiguration TempFileStorage { get; }

    public IDataSetsConfiguration DataSets { get; }

    public IPluginSystemConfiguration PluginSystem { get; }

    public ServerConfigurationSection (XElement element)
    {
      DataAccessType = element?.Attribute("dataAccessType")?.Value != null ? element.Attribute("dataAccessType").Value : default(string);
      CommandTimeout = element?.Attribute("commandTimeout")?.Value != null ? int.Parse(element.Attribute("commandTimeout").Value, CultureInfo.InvariantCulture) : default(int?);
      CommandTimeoutExtended = element?.Attribute("commandTimeoutExtended")?.Value != null ? int.Parse(element.Attribute("commandTimeoutExtended").Value, CultureInfo.InvariantCulture) : default(int?);
      BulkCopyTimeout = element?.Attribute("bulkCopyTimeout")?.Value != null ? int.Parse(element.Attribute("bulkCopyTimeout").Value, CultureInfo.InvariantCulture) : default(int?);
      PerformanceMonitoringEnabled = element?.Attribute("performanceMonitoringEnabled")?.Value != null ? bool.Parse(element.Attribute("performanceMonitoringEnabled").Value) : default(bool);
      AzureCompatibilityEnabled = element?.Attribute("azureCompatibilityEnabled")?.Value != null ? bool.Parse(element.Attribute("azureCompatibilityEnabled").Value) : default(bool);
      DataSynchronizationDisabled = element?.Attribute("dataSynchronizationDisabled")?.Value != null ? bool.Parse(element.Attribute("dataSynchronizationDisabled").Value) : default(bool?);
      CertificateSubjectName = element?.Attribute("certificateSubjectName")?.Value != null ? element.Attribute("certificateSubjectName").Value : default(string);
      CertificatePath = element?.Attribute("certificatePath")?.Value != null ? element.Attribute("certificatePath").Value : default(string);
      EncryptionKey = element?.Attribute("encryptionKey")?.Value != null ? element.Attribute("encryptionKey").Value : default(string);
      SessionExpiration = element?.Attribute("sessionExpiration")?.Value != null ? TimeSpan.Parse(element.Attribute("sessionExpiration").Value, CultureInfo.InvariantCulture) : default(TimeSpan);
      DefaultCulture = element?.Attribute("defaultCulture")?.Value != null ? element.Attribute("defaultCulture").Value : default(string);
      DefaultUICulture = element?.Attribute("defaultUICulture")?.Value != null ? element.Attribute("defaultUICulture").Value : default(string);
      ParallelDataSessionThreadCount = element?.Attribute("parallelDataSessionThreadCount")?.Value != null ? int.Parse(element.Attribute("parallelDataSessionThreadCount").Value, CultureInfo.InvariantCulture) : default(int?);
      AuditTableEnabled = element?.Attribute("auditTableEnabled")?.Value != null ? bool.Parse(element.Attribute("auditTableEnabled").Value) : default(bool?);
      ApplicationInsightsInstrumentationKey = element?.Attribute("applicationInsightsInstrumentationKey")?.Value != null ? element.Attribute("applicationInsightsInstrumentationKey").Value : default(string);
      ApplicationInsightsLoggingLevel = element?.Attribute("applicationInsightsLoggingLevel")?.Value != null ? element.Attribute("applicationInsightsLoggingLevel").Value : default(string);
      StaticFilesOutputPath = element?.Attribute("staticFilesOutputPath")?.Value != null ? element.Attribute("staticFilesOutputPath").Value : default(string);
      StaticFilesPath = element?.Attribute("staticFilesPath")?.Value != null ? element.Attribute("staticFilesPath").Value : default(string);
      DefaultAppRegistrationUserName = element?.Attribute("defaultAppRegistrationUserName")?.Value != null ? element.Attribute("defaultAppRegistrationUserName").Value : default(string);
      PluginUpdateRetryAfterInSeconds = element?.Attribute("pluginUpdateRetryAfterInSeconds")?.Value != null ? int.Parse(element.Attribute("pluginUpdateRetryAfterInSeconds").Value, CultureInfo.InvariantCulture) : default(int?);
      MaxPreCommitExecutionDurationInSeconds = element?.Attribute("maxPreCommitExecutionDurationInSeconds")?.Value != null ? int.Parse(element.Attribute("maxPreCommitExecutionDurationInSeconds").Value, CultureInfo.InvariantCulture) : default(int?);
      DisableILGeneration = element?.Attribute("disableILGeneration")?.Value != null ? bool.Parse(element.Attribute("disableILGeneration").Value) : default(bool);
      Pay = element != null ? new PayElement(element.Element("pay")) : null;
      Platform = element != null ? new PlatformElement(element.Element("platform")) : null;
      PlatformUI = element != null ? new PlatformUIElement(element.Element("platformUI")) : null;
      JobSystem = element != null ? new JobSystemElement(element.Element("jobSystem")) : null;
      Broadcast = element != null ? new BroadcastElement(element.Element("broadcast")) : null;
      AzureAppConfiguration = element != null ? new AzureAppConfigurationElement(element.Element("azureAppConfiguration")) : null;
      Diagnostics = element != null ? new DiagnosticsElement(element.Element("diagnostics")) : null;
      CommsServerProtocols = element != null ? new CommsServerProtocolsElement(element.Element("commsServerProtocols")) : null;
      SystemConfigurations = element != null ? new SystemConfigurationsElement(element.Element("systemConfigurations")) : null;
      CommsServer = element != null ? new CommsServerElement(element.Element("commsServer")) : null;
      BlobStorage = element != null ? new BlobStorageElement(element.Element("blobStorage")) : null;
      Api = element != null ? new ApiElement(element.Element("api")) : null;
      TempFileStorage = element != null ? new TempFileStorageElement(element.Element("tempFileStorage")) : null;
      DataSets = element != null ? new DataSetsElement(element.Element("dataSets")) : null;
      PluginSystem = element != null ? new PluginSystemElement(element.Element("pluginSystem")) : null;
    }
  }

#endif

  public interface IPayConfiguration
  {
    string CompletionURL { get; }

    string Identifier { get; }

    string CredentialsKey { get; }

  }

#if NETFRAMEWORK 

  public class PayElement : ConfigurationElement, IPayConfiguration
  {
    [ConfigurationProperty("completionURL")]
    public string CompletionURL
    {
      get => (string)this["completionURL"];
      set => this["completionURL"] = value;
    }

    [ConfigurationProperty("identifier")]
    public string Identifier
    {
      get => (string)this["identifier"];
      set => this["identifier"] = value;
    }

    [ConfigurationProperty("credentialsKey")]
    public string CredentialsKey
    {
      get => (string)this["credentialsKey"];
      set => this["credentialsKey"] = value;
    }

  }

#else

  public class PayElement : IPayConfiguration
  { 
    public string CompletionURL { get; }

    public string Identifier { get; }

    public string CredentialsKey { get; }

    public PayElement (XElement element)
    {
      CompletionURL = element?.Attribute("completionURL")?.Value != null ? element.Attribute("completionURL").Value : default(string);
      Identifier = element?.Attribute("identifier")?.Value != null ? element.Attribute("identifier").Value : default(string);
      CredentialsKey = element?.Attribute("credentialsKey")?.Value != null ? element.Attribute("credentialsKey").Value : default(string);
    }
  }

#endif

  public interface IPlatformConfiguration
  {
    IPlatformMapProviderSettingsConfiguration MapProviderSettings { get; }
    IPlatformRoutePlanningConfiguration RoutePlanning { get; }
    IPlatformFleetPlanningConfiguration FleetPlanning { get; }
  }

#if NETFRAMEWORK 

  public class PlatformElement : ConfigurationElement, IPlatformConfiguration
  {
    [ConfigurationProperty("mapProviderSettings")]
    public PlatformMapProviderSettingsElement MapProviderSettings
    {
      get => (PlatformMapProviderSettingsElement)this["mapProviderSettings"];
      set => this["mapProviderSettings"] = value;
    }

    IPlatformMapProviderSettingsConfiguration IPlatformConfiguration.MapProviderSettings => MapProviderSettings;

    [ConfigurationProperty("routePlanning")]
    public PlatformRoutePlanningElement RoutePlanning
    {
      get => (PlatformRoutePlanningElement)this["routePlanning"];
      set => this["routePlanning"] = value;
    }

    IPlatformRoutePlanningConfiguration IPlatformConfiguration.RoutePlanning => RoutePlanning;

    [ConfigurationProperty("fleetPlanning")]
    public PlatformFleetPlanningElement FleetPlanning
    {
      get => (PlatformFleetPlanningElement)this["fleetPlanning"];
      set => this["fleetPlanning"] = value;
    }

    IPlatformFleetPlanningConfiguration IPlatformConfiguration.FleetPlanning => FleetPlanning;

  }

#else

  public class PlatformElement : IPlatformConfiguration
  { 
    public IPlatformMapProviderSettingsConfiguration MapProviderSettings { get; }

    public IPlatformRoutePlanningConfiguration RoutePlanning { get; }

    public IPlatformFleetPlanningConfiguration FleetPlanning { get; }

    public PlatformElement (XElement element)
    {
      MapProviderSettings = element != null ? new PlatformMapProviderSettingsElement(element.Element("mapProviderSettings")) : null;
      RoutePlanning = element != null ? new PlatformRoutePlanningElement(element.Element("routePlanning")) : null;
      FleetPlanning = element != null ? new PlatformFleetPlanningElement(element.Element("fleetPlanning")) : null;
    }
  }

#endif

  public interface IPlatformMapProviderSettingsConfiguration
  {
    string AddressSearchProvider { get; }

    string HereMapsGeocodeUrl { get; }

    string HereMapsReverseGeocodeUrl { get; }

    string HereMapsAppId { get; }

    string HereMapsAppCode { get; }

    string HerePlacesAutoSuggestUrl { get; }

    string GoogleMapsGeocodeUrl { get; }

    string GoogleMapsPlaceAutoCompleteUrl { get; }

    string GoogleMapsApiKey { get; }

    string GeonorgeAddressSearchBaseUrl { get; }

    string BregBaseUrl { get; }

    string BregCustomerUrl { get; }

    string BregSiteUrl { get; }

    string PdokBaseUrl { get; }

  }

#if NETFRAMEWORK 

  public class PlatformMapProviderSettingsElement : ConfigurationElement, IPlatformMapProviderSettingsConfiguration
  {
    [ConfigurationProperty("addressSearchProvider")]
    public string AddressSearchProvider
    {
      get => (string)this["addressSearchProvider"];
      set => this["addressSearchProvider"] = value;
    }

    [ConfigurationProperty("hereMapsGeocodeUrl")]
    public string HereMapsGeocodeUrl
    {
      get => (string)this["hereMapsGeocodeUrl"];
      set => this["hereMapsGeocodeUrl"] = value;
    }

    [ConfigurationProperty("hereMapsReverseGeocodeUrl")]
    public string HereMapsReverseGeocodeUrl
    {
      get => (string)this["hereMapsReverseGeocodeUrl"];
      set => this["hereMapsReverseGeocodeUrl"] = value;
    }

    [ConfigurationProperty("hereMapsAppId")]
    public string HereMapsAppId
    {
      get => (string)this["hereMapsAppId"];
      set => this["hereMapsAppId"] = value;
    }

    [ConfigurationProperty("hereMapsAppCode")]
    public string HereMapsAppCode
    {
      get => (string)this["hereMapsAppCode"];
      set => this["hereMapsAppCode"] = value;
    }

    [ConfigurationProperty("herePlacesAutoSuggestUrl")]
    public string HerePlacesAutoSuggestUrl
    {
      get => (string)this["herePlacesAutoSuggestUrl"];
      set => this["herePlacesAutoSuggestUrl"] = value;
    }

    [ConfigurationProperty("googleMapsGeocodeUrl")]
    public string GoogleMapsGeocodeUrl
    {
      get => (string)this["googleMapsGeocodeUrl"];
      set => this["googleMapsGeocodeUrl"] = value;
    }

    [ConfigurationProperty("googleMapsPlaceAutoCompleteUrl")]
    public string GoogleMapsPlaceAutoCompleteUrl
    {
      get => (string)this["googleMapsPlaceAutoCompleteUrl"];
      set => this["googleMapsPlaceAutoCompleteUrl"] = value;
    }

    [ConfigurationProperty("googleMapsApiKey")]
    public string GoogleMapsApiKey
    {
      get => (string)this["googleMapsApiKey"];
      set => this["googleMapsApiKey"] = value;
    }

    [ConfigurationProperty("geonorgeAddressSearchBaseUrl")]
    public string GeonorgeAddressSearchBaseUrl
    {
      get => (string)this["geonorgeAddressSearchBaseUrl"];
      set => this["geonorgeAddressSearchBaseUrl"] = value;
    }

    [ConfigurationProperty("bregBaseUrl")]
    public string BregBaseUrl
    {
      get => (string)this["bregBaseUrl"];
      set => this["bregBaseUrl"] = value;
    }

    [ConfigurationProperty("bregCustomerUrl")]
    public string BregCustomerUrl
    {
      get => (string)this["bregCustomerUrl"];
      set => this["bregCustomerUrl"] = value;
    }

    [ConfigurationProperty("bregSiteUrl")]
    public string BregSiteUrl
    {
      get => (string)this["bregSiteUrl"];
      set => this["bregSiteUrl"] = value;
    }

    [ConfigurationProperty("pdokBaseUrl")]
    public string PdokBaseUrl
    {
      get => (string)this["pdokBaseUrl"];
      set => this["pdokBaseUrl"] = value;
    }

  }

#else

  public class PlatformMapProviderSettingsElement : IPlatformMapProviderSettingsConfiguration
  { 
    public string AddressSearchProvider { get; }

    public string HereMapsGeocodeUrl { get; }

    public string HereMapsReverseGeocodeUrl { get; }

    public string HereMapsAppId { get; }

    public string HereMapsAppCode { get; }

    public string HerePlacesAutoSuggestUrl { get; }

    public string GoogleMapsGeocodeUrl { get; }

    public string GoogleMapsPlaceAutoCompleteUrl { get; }

    public string GoogleMapsApiKey { get; }

    public string GeonorgeAddressSearchBaseUrl { get; }

    public string BregBaseUrl { get; }

    public string BregCustomerUrl { get; }

    public string BregSiteUrl { get; }

    public string PdokBaseUrl { get; }

    public PlatformMapProviderSettingsElement (XElement element)
    {
      AddressSearchProvider = element?.Attribute("addressSearchProvider")?.Value != null ? element.Attribute("addressSearchProvider").Value : default(string);
      HereMapsGeocodeUrl = element?.Attribute("hereMapsGeocodeUrl")?.Value != null ? element.Attribute("hereMapsGeocodeUrl").Value : default(string);
      HereMapsReverseGeocodeUrl = element?.Attribute("hereMapsReverseGeocodeUrl")?.Value != null ? element.Attribute("hereMapsReverseGeocodeUrl").Value : default(string);
      HereMapsAppId = element?.Attribute("hereMapsAppId")?.Value != null ? element.Attribute("hereMapsAppId").Value : default(string);
      HereMapsAppCode = element?.Attribute("hereMapsAppCode")?.Value != null ? element.Attribute("hereMapsAppCode").Value : default(string);
      HerePlacesAutoSuggestUrl = element?.Attribute("herePlacesAutoSuggestUrl")?.Value != null ? element.Attribute("herePlacesAutoSuggestUrl").Value : default(string);
      GoogleMapsGeocodeUrl = element?.Attribute("googleMapsGeocodeUrl")?.Value != null ? element.Attribute("googleMapsGeocodeUrl").Value : default(string);
      GoogleMapsPlaceAutoCompleteUrl = element?.Attribute("googleMapsPlaceAutoCompleteUrl")?.Value != null ? element.Attribute("googleMapsPlaceAutoCompleteUrl").Value : default(string);
      GoogleMapsApiKey = element?.Attribute("googleMapsApiKey")?.Value != null ? element.Attribute("googleMapsApiKey").Value : default(string);
      GeonorgeAddressSearchBaseUrl = element?.Attribute("geonorgeAddressSearchBaseUrl")?.Value != null ? element.Attribute("geonorgeAddressSearchBaseUrl").Value : default(string);
      BregBaseUrl = element?.Attribute("bregBaseUrl")?.Value != null ? element.Attribute("bregBaseUrl").Value : default(string);
      BregCustomerUrl = element?.Attribute("bregCustomerUrl")?.Value != null ? element.Attribute("bregCustomerUrl").Value : default(string);
      BregSiteUrl = element?.Attribute("bregSiteUrl")?.Value != null ? element.Attribute("bregSiteUrl").Value : default(string);
      PdokBaseUrl = element?.Attribute("pdokBaseUrl")?.Value != null ? element.Attribute("pdokBaseUrl").Value : default(string);
    }
  }

#endif

  public interface IPlatformRoutePlanningConfiguration
  {
    int? RoutePlannerTimeout { get; }

    int? MapTraceTimeout { get; }

    bool NearbyRoutesSearchEnabled { get; }

    int? NearbyRoutesSearchRadius { get; }

    int? NearbyLiftEventsSearchRadius { get; }

  }

#if NETFRAMEWORK 

  public class PlatformRoutePlanningElement : ConfigurationElement, IPlatformRoutePlanningConfiguration
  {
    [ConfigurationProperty("routePlannerTimeout")]
    public int? RoutePlannerTimeout
    {
      get => (int?)this["routePlannerTimeout"];
      set => this["routePlannerTimeout"] = value;
    }

    [ConfigurationProperty("mapTraceTimeout")]
    public int? MapTraceTimeout
    {
      get => (int?)this["mapTraceTimeout"];
      set => this["mapTraceTimeout"] = value;
    }

    [ConfigurationProperty("nearbyRoutesSearchEnabled")]
    public bool NearbyRoutesSearchEnabled
    {
      get => (bool)this["nearbyRoutesSearchEnabled"];
      set => this["nearbyRoutesSearchEnabled"] = value;
    }

    [ConfigurationProperty("nearbyRoutesSearchRadius")]
    public int? NearbyRoutesSearchRadius
    {
      get => (int?)this["nearbyRoutesSearchRadius"];
      set => this["nearbyRoutesSearchRadius"] = value;
    }

    [ConfigurationProperty("nearbyLiftEventsSearchRadius")]
    public int? NearbyLiftEventsSearchRadius
    {
      get => (int?)this["nearbyLiftEventsSearchRadius"];
      set => this["nearbyLiftEventsSearchRadius"] = value;
    }

  }

#else

  public class PlatformRoutePlanningElement : IPlatformRoutePlanningConfiguration
  { 
    public int? RoutePlannerTimeout { get; }

    public int? MapTraceTimeout { get; }

    public bool NearbyRoutesSearchEnabled { get; }

    public int? NearbyRoutesSearchRadius { get; }

    public int? NearbyLiftEventsSearchRadius { get; }

    public PlatformRoutePlanningElement (XElement element)
    {
      RoutePlannerTimeout = element?.Attribute("routePlannerTimeout")?.Value != null ? int.Parse(element.Attribute("routePlannerTimeout").Value, CultureInfo.InvariantCulture) : default(int?);
      MapTraceTimeout = element?.Attribute("mapTraceTimeout")?.Value != null ? int.Parse(element.Attribute("mapTraceTimeout").Value, CultureInfo.InvariantCulture) : default(int?);
      NearbyRoutesSearchEnabled = element?.Attribute("nearbyRoutesSearchEnabled")?.Value != null ? bool.Parse(element.Attribute("nearbyRoutesSearchEnabled").Value) : default(bool);
      NearbyRoutesSearchRadius = element?.Attribute("nearbyRoutesSearchRadius")?.Value != null ? int.Parse(element.Attribute("nearbyRoutesSearchRadius").Value, CultureInfo.InvariantCulture) : default(int?);
      NearbyLiftEventsSearchRadius = element?.Attribute("nearbyLiftEventsSearchRadius")?.Value != null ? int.Parse(element.Attribute("nearbyLiftEventsSearchRadius").Value, CultureInfo.InvariantCulture) : default(int?);
    }
  }

#endif

  public interface IPlatformFleetPlanningConfiguration
  {
    int? FleetPlannerTimeout { get; }

    string ItemStatusesUrl { get; }

    string ItemDetailsUrl { get; }

    string QualificationsUrl { get; }

  }

#if NETFRAMEWORK 

  public class PlatformFleetPlanningElement : ConfigurationElement, IPlatformFleetPlanningConfiguration
  {
    [ConfigurationProperty("fleetPlannerTimeout")]
    public int? FleetPlannerTimeout
    {
      get => (int?)this["fleetPlannerTimeout"];
      set => this["fleetPlannerTimeout"] = value;
    }

    [ConfigurationProperty("itemStatusesUrl")]
    public string ItemStatusesUrl
    {
      get => (string)this["itemStatusesUrl"];
      set => this["itemStatusesUrl"] = value;
    }

    [ConfigurationProperty("itemDetailsUrl")]
    public string ItemDetailsUrl
    {
      get => (string)this["itemDetailsUrl"];
      set => this["itemDetailsUrl"] = value;
    }

    [ConfigurationProperty("qualificationsUrl")]
    public string QualificationsUrl
    {
      get => (string)this["qualificationsUrl"];
      set => this["qualificationsUrl"] = value;
    }

  }

#else

  public class PlatformFleetPlanningElement : IPlatformFleetPlanningConfiguration
  { 
    public int? FleetPlannerTimeout { get; }

    public string ItemStatusesUrl { get; }

    public string ItemDetailsUrl { get; }

    public string QualificationsUrl { get; }

    public PlatformFleetPlanningElement (XElement element)
    {
      FleetPlannerTimeout = element?.Attribute("fleetPlannerTimeout")?.Value != null ? int.Parse(element.Attribute("fleetPlannerTimeout").Value, CultureInfo.InvariantCulture) : default(int?);
      ItemStatusesUrl = element?.Attribute("itemStatusesUrl")?.Value != null ? element.Attribute("itemStatusesUrl").Value : default(string);
      ItemDetailsUrl = element?.Attribute("itemDetailsUrl")?.Value != null ? element.Attribute("itemDetailsUrl").Value : default(string);
      QualificationsUrl = element?.Attribute("qualificationsUrl")?.Value != null ? element.Attribute("qualificationsUrl").Value : default(string);
    }
  }

#endif

  public interface IPlatformUIConfiguration
  {
    IPlatformUIApplicationConfiguration ApplicationSettings { get; }
    IPlatformUIApplicationInsightsConfiguration ApplicationInsightsSettings { get; }
    IPlatformUIMapProvidersConfiguration MapProviders { get; }
    IPlatformUIGeneralConfiguration General { get; }
    IPlatformUIDeveloperConfiguration DeveloperSettings { get; }
    IPlatformUIFeatureToggleConfiguration FeatureToggleSettings { get; }
  }

#if NETFRAMEWORK 

  public class PlatformUIElement : ConfigurationElement, IPlatformUIConfiguration
  {
    [ConfigurationProperty("applicationSettings")]
    public PlatformUIApplicationElement ApplicationSettings
    {
      get => (PlatformUIApplicationElement)this["applicationSettings"];
      set => this["applicationSettings"] = value;
    }

    IPlatformUIApplicationConfiguration IPlatformUIConfiguration.ApplicationSettings => ApplicationSettings;

    [ConfigurationProperty("applicationInsightsSettings")]
    public PlatformUIApplicationInsightsElement ApplicationInsightsSettings
    {
      get => (PlatformUIApplicationInsightsElement)this["applicationInsightsSettings"];
      set => this["applicationInsightsSettings"] = value;
    }

    IPlatformUIApplicationInsightsConfiguration IPlatformUIConfiguration.ApplicationInsightsSettings => ApplicationInsightsSettings;

    [ConfigurationProperty("mapProviders")]
    public PlatformUIMapProvidersElement MapProviders
    {
      get => (PlatformUIMapProvidersElement)this["mapProviders"];
      set => this["mapProviders"] = value;
    }

    IPlatformUIMapProvidersConfiguration IPlatformUIConfiguration.MapProviders => MapProviders;

    [ConfigurationProperty("general")]
    public PlatformUIGeneralElement General
    {
      get => (PlatformUIGeneralElement)this["general"];
      set => this["general"] = value;
    }

    IPlatformUIGeneralConfiguration IPlatformUIConfiguration.General => General;

    [ConfigurationProperty("developerSettings")]
    public PlatformUIDeveloperElement DeveloperSettings
    {
      get => (PlatformUIDeveloperElement)this["developerSettings"];
      set => this["developerSettings"] = value;
    }

    IPlatformUIDeveloperConfiguration IPlatformUIConfiguration.DeveloperSettings => DeveloperSettings;

    [ConfigurationProperty("featureToggleSettings")]
    public PlatformUIFeatureToggleElement FeatureToggleSettings
    {
      get => (PlatformUIFeatureToggleElement)this["featureToggleSettings"];
      set => this["featureToggleSettings"] = value;
    }

    IPlatformUIFeatureToggleConfiguration IPlatformUIConfiguration.FeatureToggleSettings => FeatureToggleSettings;

  }

#else

  public class PlatformUIElement : IPlatformUIConfiguration
  { 
    public IPlatformUIApplicationConfiguration ApplicationSettings { get; }

    public IPlatformUIApplicationInsightsConfiguration ApplicationInsightsSettings { get; }

    public IPlatformUIMapProvidersConfiguration MapProviders { get; }

    public IPlatformUIGeneralConfiguration General { get; }

    public IPlatformUIDeveloperConfiguration DeveloperSettings { get; }

    public IPlatformUIFeatureToggleConfiguration FeatureToggleSettings { get; }

    public PlatformUIElement (XElement element)
    {
      ApplicationSettings = element != null ? new PlatformUIApplicationElement(element.Element("applicationSettings")) : null;
      ApplicationInsightsSettings = element != null ? new PlatformUIApplicationInsightsElement(element.Element("applicationInsightsSettings")) : null;
      MapProviders = element != null ? new PlatformUIMapProvidersElement(element.Element("mapProviders")) : null;
      General = element != null ? new PlatformUIGeneralElement(element.Element("general")) : null;
      DeveloperSettings = element != null ? new PlatformUIDeveloperElement(element.Element("developerSettings")) : null;
      FeatureToggleSettings = element != null ? new PlatformUIFeatureToggleElement(element.Element("featureToggleSettings")) : null;
    }
  }

#endif

  public interface IPlatformUIApplicationConfiguration
  {
    int? PollingIntervalSeconds { get; }

    string ClickOnceExtensionURLChrome { get; }

    string ClickOnceExtensionURLFirefox { get; }

    int? NotificationDurationShort { get; }

    int? NotificationDurationNormal { get; }

    int? NotificationDurationLong { get; }

    int? CommunicationCountPollingIntervalSeconds { get; }

    bool CanCancelCallLog { get; }

    int? MaxJobDocuments { get; }

    int? MaxJobDocumentSizeInMb { get; }

    int? MaxJobDocumentsPerSave { get; }

    int? DurationToDisplayCallLogNotification { get; }

    int? DefaultCustomerNoteCommunicationType { get; }

    int? MaxManifestProfileDocumentsPerSave { get; }

    decimal? MaxManifestProfileDocumentSizeInMb { get; }

    bool BrregIntegrationEnabled { get; }

    bool EnableCasualCustomerTemplateEmailFields { get; }

    int? MaxServiceAgreementDocuments { get; }

    decimal? MaxServiceAgreementDocumentSizeInMb { get; }

    int? MaxHealthAndSafetyDocumentSizeInMb { get; }

    int? MaxHealthAndSafetyDocuments { get; }

    string WasteTransferNoteBiReportPath { get; }

    bool EnableHierarchyPrice { get; }

    bool DisableZoneFeature { get; }

    bool ManageAPinWebUI { get; }

  }

#if NETFRAMEWORK 

  public class PlatformUIApplicationElement : ConfigurationElement, IPlatformUIApplicationConfiguration
  {
    [ConfigurationProperty("pollingIntervalSeconds")]
    public int? PollingIntervalSeconds
    {
      get => (int?)this["pollingIntervalSeconds"];
      set => this["pollingIntervalSeconds"] = value;
    }

    [ConfigurationProperty("clickOnceExtensionURLChrome")]
    public string ClickOnceExtensionURLChrome
    {
      get => (string)this["clickOnceExtensionURLChrome"];
      set => this["clickOnceExtensionURLChrome"] = value;
    }

    [ConfigurationProperty("clickOnceExtensionURLFirefox")]
    public string ClickOnceExtensionURLFirefox
    {
      get => (string)this["clickOnceExtensionURLFirefox"];
      set => this["clickOnceExtensionURLFirefox"] = value;
    }

    [ConfigurationProperty("notificationDurationShort")]
    public int? NotificationDurationShort
    {
      get => (int?)this["notificationDurationShort"];
      set => this["notificationDurationShort"] = value;
    }

    [ConfigurationProperty("notificationDurationNormal")]
    public int? NotificationDurationNormal
    {
      get => (int?)this["notificationDurationNormal"];
      set => this["notificationDurationNormal"] = value;
    }

    [ConfigurationProperty("notificationDurationLong")]
    public int? NotificationDurationLong
    {
      get => (int?)this["notificationDurationLong"];
      set => this["notificationDurationLong"] = value;
    }

    [ConfigurationProperty("communicationCountPollingIntervalSeconds")]
    public int? CommunicationCountPollingIntervalSeconds
    {
      get => (int?)this["communicationCountPollingIntervalSeconds"];
      set => this["communicationCountPollingIntervalSeconds"] = value;
    }

    [ConfigurationProperty("canCancelCallLog")]
    public bool CanCancelCallLog
    {
      get => (bool)this["canCancelCallLog"];
      set => this["canCancelCallLog"] = value;
    }

    [ConfigurationProperty("maxJobDocuments")]
    public int? MaxJobDocuments
    {
      get => (int?)this["maxJobDocuments"];
      set => this["maxJobDocuments"] = value;
    }

    [ConfigurationProperty("maxJobDocumentSizeInMb")]
    public int? MaxJobDocumentSizeInMb
    {
      get => (int?)this["maxJobDocumentSizeInMb"];
      set => this["maxJobDocumentSizeInMb"] = value;
    }

    [ConfigurationProperty("maxJobDocumentsPerSave")]
    public int? MaxJobDocumentsPerSave
    {
      get => (int?)this["maxJobDocumentsPerSave"];
      set => this["maxJobDocumentsPerSave"] = value;
    }

    [ConfigurationProperty("durationToDisplayCallLogNotification")]
    public int? DurationToDisplayCallLogNotification
    {
      get => (int?)this["durationToDisplayCallLogNotification"];
      set => this["durationToDisplayCallLogNotification"] = value;
    }

    [ConfigurationProperty("defaultCustomerNoteCommunicationType")]
    public int? DefaultCustomerNoteCommunicationType
    {
      get => (int?)this["defaultCustomerNoteCommunicationType"];
      set => this["defaultCustomerNoteCommunicationType"] = value;
    }

    [ConfigurationProperty("maxManifestProfileDocumentsPerSave")]
    public int? MaxManifestProfileDocumentsPerSave
    {
      get => (int?)this["maxManifestProfileDocumentsPerSave"];
      set => this["maxManifestProfileDocumentsPerSave"] = value;
    }

    [ConfigurationProperty("maxManifestProfileDocumentSizeInMb")]
    public decimal? MaxManifestProfileDocumentSizeInMb
    {
      get => (decimal?)this["maxManifestProfileDocumentSizeInMb"];
      set => this["maxManifestProfileDocumentSizeInMb"] = value;
    }

    [ConfigurationProperty("brregIntegrationEnabled")]
    public bool BrregIntegrationEnabled
    {
      get => (bool)this["brregIntegrationEnabled"];
      set => this["brregIntegrationEnabled"] = value;
    }

    [ConfigurationProperty("enableCasualCustomerTemplateEmailFields")]
    public bool EnableCasualCustomerTemplateEmailFields
    {
      get => (bool)this["enableCasualCustomerTemplateEmailFields"];
      set => this["enableCasualCustomerTemplateEmailFields"] = value;
    }

    [ConfigurationProperty("maxServiceAgreementDocuments")]
    public int? MaxServiceAgreementDocuments
    {
      get => (int?)this["maxServiceAgreementDocuments"];
      set => this["maxServiceAgreementDocuments"] = value;
    }

    [ConfigurationProperty("maxServiceAgreementDocumentSizeInMb")]
    public decimal? MaxServiceAgreementDocumentSizeInMb
    {
      get => (decimal?)this["maxServiceAgreementDocumentSizeInMb"];
      set => this["maxServiceAgreementDocumentSizeInMb"] = value;
    }

    [ConfigurationProperty("maxHealthAndSafetyDocumentSizeInMb")]
    public int? MaxHealthAndSafetyDocumentSizeInMb
    {
      get => (int?)this["maxHealthAndSafetyDocumentSizeInMb"];
      set => this["maxHealthAndSafetyDocumentSizeInMb"] = value;
    }

    [ConfigurationProperty("maxHealthAndSafetyDocuments")]
    public int? MaxHealthAndSafetyDocuments
    {
      get => (int?)this["maxHealthAndSafetyDocuments"];
      set => this["maxHealthAndSafetyDocuments"] = value;
    }

    [ConfigurationProperty("wasteTransferNoteBiReportPath")]
    public string WasteTransferNoteBiReportPath
    {
      get => (string)this["wasteTransferNoteBiReportPath"];
      set => this["wasteTransferNoteBiReportPath"] = value;
    }

    [ConfigurationProperty("enableHierarchyPrice")]
    public bool EnableHierarchyPrice
    {
      get => (bool)this["enableHierarchyPrice"];
      set => this["enableHierarchyPrice"] = value;
    }

    [ConfigurationProperty("disableZoneFeature")]
    public bool DisableZoneFeature
    {
      get => (bool)this["disableZoneFeature"];
      set => this["disableZoneFeature"] = value;
    }

    [ConfigurationProperty("manageAPinWebUI")]
    public bool ManageAPinWebUI
    {
      get => (bool)this["manageAPinWebUI"];
      set => this["manageAPinWebUI"] = value;
    }

  }

#else

  public class PlatformUIApplicationElement : IPlatformUIApplicationConfiguration
  { 
    public int? PollingIntervalSeconds { get; }

    public string ClickOnceExtensionURLChrome { get; }

    public string ClickOnceExtensionURLFirefox { get; }

    public int? NotificationDurationShort { get; }

    public int? NotificationDurationNormal { get; }

    public int? NotificationDurationLong { get; }

    public int? CommunicationCountPollingIntervalSeconds { get; }

    public bool CanCancelCallLog { get; }

    public int? MaxJobDocuments { get; }

    public int? MaxJobDocumentSizeInMb { get; }

    public int? MaxJobDocumentsPerSave { get; }

    public int? DurationToDisplayCallLogNotification { get; }

    public int? DefaultCustomerNoteCommunicationType { get; }

    public int? MaxManifestProfileDocumentsPerSave { get; }

    public decimal? MaxManifestProfileDocumentSizeInMb { get; }

    public bool BrregIntegrationEnabled { get; }

    public bool EnableCasualCustomerTemplateEmailFields { get; }

    public int? MaxServiceAgreementDocuments { get; }

    public decimal? MaxServiceAgreementDocumentSizeInMb { get; }

    public int? MaxHealthAndSafetyDocumentSizeInMb { get; }

    public int? MaxHealthAndSafetyDocuments { get; }

    public string WasteTransferNoteBiReportPath { get; }

    public bool EnableHierarchyPrice { get; }

    public bool DisableZoneFeature { get; }

    public bool ManageAPinWebUI { get; }

    public PlatformUIApplicationElement (XElement element)
    {
      PollingIntervalSeconds = element?.Attribute("pollingIntervalSeconds")?.Value != null ? int.Parse(element.Attribute("pollingIntervalSeconds").Value, CultureInfo.InvariantCulture) : default(int?);
      ClickOnceExtensionURLChrome = element?.Attribute("clickOnceExtensionURLChrome")?.Value != null ? element.Attribute("clickOnceExtensionURLChrome").Value : default(string);
      ClickOnceExtensionURLFirefox = element?.Attribute("clickOnceExtensionURLFirefox")?.Value != null ? element.Attribute("clickOnceExtensionURLFirefox").Value : default(string);
      NotificationDurationShort = element?.Attribute("notificationDurationShort")?.Value != null ? int.Parse(element.Attribute("notificationDurationShort").Value, CultureInfo.InvariantCulture) : default(int?);
      NotificationDurationNormal = element?.Attribute("notificationDurationNormal")?.Value != null ? int.Parse(element.Attribute("notificationDurationNormal").Value, CultureInfo.InvariantCulture) : default(int?);
      NotificationDurationLong = element?.Attribute("notificationDurationLong")?.Value != null ? int.Parse(element.Attribute("notificationDurationLong").Value, CultureInfo.InvariantCulture) : default(int?);
      CommunicationCountPollingIntervalSeconds = element?.Attribute("communicationCountPollingIntervalSeconds")?.Value != null ? int.Parse(element.Attribute("communicationCountPollingIntervalSeconds").Value, CultureInfo.InvariantCulture) : default(int?);
      CanCancelCallLog = element?.Attribute("canCancelCallLog")?.Value != null ? bool.Parse(element.Attribute("canCancelCallLog").Value) : default(bool);
      MaxJobDocuments = element?.Attribute("maxJobDocuments")?.Value != null ? int.Parse(element.Attribute("maxJobDocuments").Value, CultureInfo.InvariantCulture) : default(int?);
      MaxJobDocumentSizeInMb = element?.Attribute("maxJobDocumentSizeInMb")?.Value != null ? int.Parse(element.Attribute("maxJobDocumentSizeInMb").Value, CultureInfo.InvariantCulture) : default(int?);
      MaxJobDocumentsPerSave = element?.Attribute("maxJobDocumentsPerSave")?.Value != null ? int.Parse(element.Attribute("maxJobDocumentsPerSave").Value, CultureInfo.InvariantCulture) : default(int?);
      DurationToDisplayCallLogNotification = element?.Attribute("durationToDisplayCallLogNotification")?.Value != null ? int.Parse(element.Attribute("durationToDisplayCallLogNotification").Value, CultureInfo.InvariantCulture) : default(int?);
      DefaultCustomerNoteCommunicationType = element?.Attribute("defaultCustomerNoteCommunicationType")?.Value != null ? int.Parse(element.Attribute("defaultCustomerNoteCommunicationType").Value, CultureInfo.InvariantCulture) : default(int?);
      MaxManifestProfileDocumentsPerSave = element?.Attribute("maxManifestProfileDocumentsPerSave")?.Value != null ? int.Parse(element.Attribute("maxManifestProfileDocumentsPerSave").Value, CultureInfo.InvariantCulture) : default(int?);
      MaxManifestProfileDocumentSizeInMb = element?.Attribute("maxManifestProfileDocumentSizeInMb")?.Value != null ? decimal.Parse(element.Attribute("maxManifestProfileDocumentSizeInMb").Value, CultureInfo.InvariantCulture) : default(decimal?);
      BrregIntegrationEnabled = element?.Attribute("brregIntegrationEnabled")?.Value != null ? bool.Parse(element.Attribute("brregIntegrationEnabled").Value) : default(bool);
      EnableCasualCustomerTemplateEmailFields = element?.Attribute("enableCasualCustomerTemplateEmailFields")?.Value != null ? bool.Parse(element.Attribute("enableCasualCustomerTemplateEmailFields").Value) : default(bool);
      MaxServiceAgreementDocuments = element?.Attribute("maxServiceAgreementDocuments")?.Value != null ? int.Parse(element.Attribute("maxServiceAgreementDocuments").Value, CultureInfo.InvariantCulture) : default(int?);
      MaxServiceAgreementDocumentSizeInMb = element?.Attribute("maxServiceAgreementDocumentSizeInMb")?.Value != null ? decimal.Parse(element.Attribute("maxServiceAgreementDocumentSizeInMb").Value, CultureInfo.InvariantCulture) : default(decimal?);
      MaxHealthAndSafetyDocumentSizeInMb = element?.Attribute("maxHealthAndSafetyDocumentSizeInMb")?.Value != null ? int.Parse(element.Attribute("maxHealthAndSafetyDocumentSizeInMb").Value, CultureInfo.InvariantCulture) : default(int?);
      MaxHealthAndSafetyDocuments = element?.Attribute("maxHealthAndSafetyDocuments")?.Value != null ? int.Parse(element.Attribute("maxHealthAndSafetyDocuments").Value, CultureInfo.InvariantCulture) : default(int?);
      WasteTransferNoteBiReportPath = element?.Attribute("wasteTransferNoteBiReportPath")?.Value != null ? element.Attribute("wasteTransferNoteBiReportPath").Value : default(string);
      EnableHierarchyPrice = element?.Attribute("enableHierarchyPrice")?.Value != null ? bool.Parse(element.Attribute("enableHierarchyPrice").Value) : default(bool);
      DisableZoneFeature = element?.Attribute("disableZoneFeature")?.Value != null ? bool.Parse(element.Attribute("disableZoneFeature").Value) : default(bool);
      ManageAPinWebUI = element?.Attribute("manageAPinWebUI")?.Value != null ? bool.Parse(element.Attribute("manageAPinWebUI").Value) : default(bool);
    }
  }

#endif

  public interface IPlatformUIApplicationInsightsConfiguration
  {
    bool AppInsightsOn { get; }

    bool ConsoleLoggingOn { get; }

    bool TrackingOptionsPageViewLoadTimesUrlBased { get; }

    bool TrackingOptionsPageViewLoadTimesManualComponentNameBased { get; }

    bool TrackingOptionsComponentLifecycle { get; }

    bool TrackingOptionsUIInteractionEvent { get; }

    bool TrackingOptionsLoginEvents { get; }

    bool TrackingOptionsDesktopEvents { get; }

    bool TrackingOptionsGlobalSearchEvents { get; }

    bool TrackingOptionsGlobalSearchTerms { get; }

    bool TrackingOptionsCustomerContactEvents { get; }

    bool TrackingOptionsCustomerCalendarEvents { get; }

    bool TrackingOptionsCustomerOperationEvents { get; }

    bool TrackingOptionsCustomerServiceLocationEvents { get; }

  }

#if NETFRAMEWORK 

  public class PlatformUIApplicationInsightsElement : ConfigurationElement, IPlatformUIApplicationInsightsConfiguration
  {
    [ConfigurationProperty("appInsightsOn")]
    public bool AppInsightsOn
    {
      get => (bool)this["appInsightsOn"];
      set => this["appInsightsOn"] = value;
    }

    [ConfigurationProperty("consoleLoggingOn")]
    public bool ConsoleLoggingOn
    {
      get => (bool)this["consoleLoggingOn"];
      set => this["consoleLoggingOn"] = value;
    }

    [ConfigurationProperty("trackingOptionsPageViewLoadTimesUrlBased")]
    public bool TrackingOptionsPageViewLoadTimesUrlBased
    {
      get => (bool)this["trackingOptionsPageViewLoadTimesUrlBased"];
      set => this["trackingOptionsPageViewLoadTimesUrlBased"] = value;
    }

    [ConfigurationProperty("trackingOptionsPageViewLoadTimesManualComponentNameBased")]
    public bool TrackingOptionsPageViewLoadTimesManualComponentNameBased
    {
      get => (bool)this["trackingOptionsPageViewLoadTimesManualComponentNameBased"];
      set => this["trackingOptionsPageViewLoadTimesManualComponentNameBased"] = value;
    }

    [ConfigurationProperty("trackingOptionsComponentLifecycle")]
    public bool TrackingOptionsComponentLifecycle
    {
      get => (bool)this["trackingOptionsComponentLifecycle"];
      set => this["trackingOptionsComponentLifecycle"] = value;
    }

    [ConfigurationProperty("trackingOptionsUIInteractionEvent")]
    public bool TrackingOptionsUIInteractionEvent
    {
      get => (bool)this["trackingOptionsUIInteractionEvent"];
      set => this["trackingOptionsUIInteractionEvent"] = value;
    }

    [ConfigurationProperty("trackingOptionsLoginEvents")]
    public bool TrackingOptionsLoginEvents
    {
      get => (bool)this["trackingOptionsLoginEvents"];
      set => this["trackingOptionsLoginEvents"] = value;
    }

    [ConfigurationProperty("trackingOptionsDesktopEvents")]
    public bool TrackingOptionsDesktopEvents
    {
      get => (bool)this["trackingOptionsDesktopEvents"];
      set => this["trackingOptionsDesktopEvents"] = value;
    }

    [ConfigurationProperty("trackingOptionsGlobalSearchEvents")]
    public bool TrackingOptionsGlobalSearchEvents
    {
      get => (bool)this["trackingOptionsGlobalSearchEvents"];
      set => this["trackingOptionsGlobalSearchEvents"] = value;
    }

    [ConfigurationProperty("trackingOptionsGlobalSearchTerms")]
    public bool TrackingOptionsGlobalSearchTerms
    {
      get => (bool)this["trackingOptionsGlobalSearchTerms"];
      set => this["trackingOptionsGlobalSearchTerms"] = value;
    }

    [ConfigurationProperty("trackingOptionsCustomerContactEvents")]
    public bool TrackingOptionsCustomerContactEvents
    {
      get => (bool)this["trackingOptionsCustomerContactEvents"];
      set => this["trackingOptionsCustomerContactEvents"] = value;
    }

    [ConfigurationProperty("trackingOptionsCustomerCalendarEvents")]
    public bool TrackingOptionsCustomerCalendarEvents
    {
      get => (bool)this["trackingOptionsCustomerCalendarEvents"];
      set => this["trackingOptionsCustomerCalendarEvents"] = value;
    }

    [ConfigurationProperty("trackingOptionsCustomerOperationEvents")]
    public bool TrackingOptionsCustomerOperationEvents
    {
      get => (bool)this["trackingOptionsCustomerOperationEvents"];
      set => this["trackingOptionsCustomerOperationEvents"] = value;
    }

    [ConfigurationProperty("trackingOptionsCustomerServiceLocationEvents")]
    public bool TrackingOptionsCustomerServiceLocationEvents
    {
      get => (bool)this["trackingOptionsCustomerServiceLocationEvents"];
      set => this["trackingOptionsCustomerServiceLocationEvents"] = value;
    }

  }

#else

  public class PlatformUIApplicationInsightsElement : IPlatformUIApplicationInsightsConfiguration
  { 
    public bool AppInsightsOn { get; }

    public bool ConsoleLoggingOn { get; }

    public bool TrackingOptionsPageViewLoadTimesUrlBased { get; }

    public bool TrackingOptionsPageViewLoadTimesManualComponentNameBased { get; }

    public bool TrackingOptionsComponentLifecycle { get; }

    public bool TrackingOptionsUIInteractionEvent { get; }

    public bool TrackingOptionsLoginEvents { get; }

    public bool TrackingOptionsDesktopEvents { get; }

    public bool TrackingOptionsGlobalSearchEvents { get; }

    public bool TrackingOptionsGlobalSearchTerms { get; }

    public bool TrackingOptionsCustomerContactEvents { get; }

    public bool TrackingOptionsCustomerCalendarEvents { get; }

    public bool TrackingOptionsCustomerOperationEvents { get; }

    public bool TrackingOptionsCustomerServiceLocationEvents { get; }

    public PlatformUIApplicationInsightsElement (XElement element)
    {
      AppInsightsOn = element?.Attribute("appInsightsOn")?.Value != null ? bool.Parse(element.Attribute("appInsightsOn").Value) : default(bool);
      ConsoleLoggingOn = element?.Attribute("consoleLoggingOn")?.Value != null ? bool.Parse(element.Attribute("consoleLoggingOn").Value) : default(bool);
      TrackingOptionsPageViewLoadTimesUrlBased = element?.Attribute("trackingOptionsPageViewLoadTimesUrlBased")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsPageViewLoadTimesUrlBased").Value) : default(bool);
      TrackingOptionsPageViewLoadTimesManualComponentNameBased = element?.Attribute("trackingOptionsPageViewLoadTimesManualComponentNameBased")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsPageViewLoadTimesManualComponentNameBased").Value) : default(bool);
      TrackingOptionsComponentLifecycle = element?.Attribute("trackingOptionsComponentLifecycle")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsComponentLifecycle").Value) : default(bool);
      TrackingOptionsUIInteractionEvent = element?.Attribute("trackingOptionsUIInteractionEvent")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsUIInteractionEvent").Value) : default(bool);
      TrackingOptionsLoginEvents = element?.Attribute("trackingOptionsLoginEvents")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsLoginEvents").Value) : default(bool);
      TrackingOptionsDesktopEvents = element?.Attribute("trackingOptionsDesktopEvents")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsDesktopEvents").Value) : default(bool);
      TrackingOptionsGlobalSearchEvents = element?.Attribute("trackingOptionsGlobalSearchEvents")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsGlobalSearchEvents").Value) : default(bool);
      TrackingOptionsGlobalSearchTerms = element?.Attribute("trackingOptionsGlobalSearchTerms")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsGlobalSearchTerms").Value) : default(bool);
      TrackingOptionsCustomerContactEvents = element?.Attribute("trackingOptionsCustomerContactEvents")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsCustomerContactEvents").Value) : default(bool);
      TrackingOptionsCustomerCalendarEvents = element?.Attribute("trackingOptionsCustomerCalendarEvents")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsCustomerCalendarEvents").Value) : default(bool);
      TrackingOptionsCustomerOperationEvents = element?.Attribute("trackingOptionsCustomerOperationEvents")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsCustomerOperationEvents").Value) : default(bool);
      TrackingOptionsCustomerServiceLocationEvents = element?.Attribute("trackingOptionsCustomerServiceLocationEvents")?.Value != null ? bool.Parse(element.Attribute("trackingOptionsCustomerServiceLocationEvents").Value) : default(bool);
    }
  }

#endif

  public interface IPlatformUIMapProvidersConfiguration
  {
    string GoogleMapsUrl { get; }

    string GoogleMapsSatelliteUrl { get; }

    string GoogleMapsTerrainUrl { get; }

    string HereMapsUrl { get; }

    string HereMapsSatelliteUrl { get; }

    string HereMapsTerrainUrl { get; }

    string MapDisplayProvider { get; }

  }

#if NETFRAMEWORK 

  public class PlatformUIMapProvidersElement : ConfigurationElement, IPlatformUIMapProvidersConfiguration
  {
    [ConfigurationProperty("googleMapsUrl")]
    public string GoogleMapsUrl
    {
      get => (string)this["googleMapsUrl"];
      set => this["googleMapsUrl"] = value;
    }

    [ConfigurationProperty("googleMapsSatelliteUrl")]
    public string GoogleMapsSatelliteUrl
    {
      get => (string)this["googleMapsSatelliteUrl"];
      set => this["googleMapsSatelliteUrl"] = value;
    }

    [ConfigurationProperty("googleMapsTerrainUrl")]
    public string GoogleMapsTerrainUrl
    {
      get => (string)this["googleMapsTerrainUrl"];
      set => this["googleMapsTerrainUrl"] = value;
    }

    [ConfigurationProperty("hereMapsUrl")]
    public string HereMapsUrl
    {
      get => (string)this["hereMapsUrl"];
      set => this["hereMapsUrl"] = value;
    }

    [ConfigurationProperty("hereMapsSatelliteUrl")]
    public string HereMapsSatelliteUrl
    {
      get => (string)this["hereMapsSatelliteUrl"];
      set => this["hereMapsSatelliteUrl"] = value;
    }

    [ConfigurationProperty("hereMapsTerrainUrl")]
    public string HereMapsTerrainUrl
    {
      get => (string)this["hereMapsTerrainUrl"];
      set => this["hereMapsTerrainUrl"] = value;
    }

    [ConfigurationProperty("mapDisplayProvider")]
    public string MapDisplayProvider
    {
      get => (string)this["mapDisplayProvider"];
      set => this["mapDisplayProvider"] = value;
    }

  }

#else

  public class PlatformUIMapProvidersElement : IPlatformUIMapProvidersConfiguration
  { 
    public string GoogleMapsUrl { get; }

    public string GoogleMapsSatelliteUrl { get; }

    public string GoogleMapsTerrainUrl { get; }

    public string HereMapsUrl { get; }

    public string HereMapsSatelliteUrl { get; }

    public string HereMapsTerrainUrl { get; }

    public string MapDisplayProvider { get; }

    public PlatformUIMapProvidersElement (XElement element)
    {
      GoogleMapsUrl = element?.Attribute("googleMapsUrl")?.Value != null ? element.Attribute("googleMapsUrl").Value : default(string);
      GoogleMapsSatelliteUrl = element?.Attribute("googleMapsSatelliteUrl")?.Value != null ? element.Attribute("googleMapsSatelliteUrl").Value : default(string);
      GoogleMapsTerrainUrl = element?.Attribute("googleMapsTerrainUrl")?.Value != null ? element.Attribute("googleMapsTerrainUrl").Value : default(string);
      HereMapsUrl = element?.Attribute("hereMapsUrl")?.Value != null ? element.Attribute("hereMapsUrl").Value : default(string);
      HereMapsSatelliteUrl = element?.Attribute("hereMapsSatelliteUrl")?.Value != null ? element.Attribute("hereMapsSatelliteUrl").Value : default(string);
      HereMapsTerrainUrl = element?.Attribute("hereMapsTerrainUrl")?.Value != null ? element.Attribute("hereMapsTerrainUrl").Value : default(string);
      MapDisplayProvider = element?.Attribute("mapDisplayProvider")?.Value != null ? element.Attribute("mapDisplayProvider").Value : default(string);
    }
  }

#endif

  public interface IPlatformUIGeneralConfiguration
  {
    bool IsTabControlReadOnly { get; }

    bool HideSiteOrderActions { get; }

  }

#if NETFRAMEWORK 

  public class PlatformUIGeneralElement : ConfigurationElement, IPlatformUIGeneralConfiguration
  {
    [ConfigurationProperty("isTabControlReadOnly")]
    public bool IsTabControlReadOnly
    {
      get => (bool)this["isTabControlReadOnly"];
      set => this["isTabControlReadOnly"] = value;
    }

    [ConfigurationProperty("hideSiteOrderActions")]
    public bool HideSiteOrderActions
    {
      get => (bool)this["hideSiteOrderActions"];
      set => this["hideSiteOrderActions"] = value;
    }

  }

#else

  public class PlatformUIGeneralElement : IPlatformUIGeneralConfiguration
  { 
    public bool IsTabControlReadOnly { get; }

    public bool HideSiteOrderActions { get; }

    public PlatformUIGeneralElement (XElement element)
    {
      IsTabControlReadOnly = element?.Attribute("isTabControlReadOnly")?.Value != null ? bool.Parse(element.Attribute("isTabControlReadOnly").Value) : default(bool);
      HideSiteOrderActions = element?.Attribute("hideSiteOrderActions")?.Value != null ? bool.Parse(element.Attribute("hideSiteOrderActions").Value) : default(bool);
    }
  }

#endif

  public interface IPlatformUIDeveloperConfiguration
  {
    bool ShowCommunicationsAdd { get; }

    bool ShowCommunicationsDropdown { get; }

    bool ShowContactDelete { get; }

    bool ShowContractsAdd { get; }

    bool ShowContractsExpander { get; }

    bool ShowCustomerAdd { get; }

    bool ShowDashboardOverviewEdit { get; }

    bool ShowHeaderDevTools { get; }

    bool ShowHeaderERPAbout { get; }

    bool ShowServiceLocationsAdd { get; }

    bool ShowServiceLocationsDelete { get; }

    bool ShowMissedCollectionLogEvent { get; }

    bool ShowMissedCollectionCreateCallout { get; }

    bool ShowFrequentDashboardActions { get; }

    bool ShowSiteOrderActionMenu { get; }

    bool ShowSiteOrderAdd { get; }

    bool ShowLoadReceiving { get; }

    bool ShowAddUnplannedLoads { get; }

  }

#if NETFRAMEWORK 

  public class PlatformUIDeveloperElement : ConfigurationElement, IPlatformUIDeveloperConfiguration
  {
    [ConfigurationProperty("showCommunicationsAdd")]
    public bool ShowCommunicationsAdd
    {
      get => (bool)this["showCommunicationsAdd"];
      set => this["showCommunicationsAdd"] = value;
    }

    [ConfigurationProperty("showCommunicationsDropdown")]
    public bool ShowCommunicationsDropdown
    {
      get => (bool)this["showCommunicationsDropdown"];
      set => this["showCommunicationsDropdown"] = value;
    }

    [ConfigurationProperty("showContactDelete")]
    public bool ShowContactDelete
    {
      get => (bool)this["showContactDelete"];
      set => this["showContactDelete"] = value;
    }

    [ConfigurationProperty("showContractsAdd")]
    public bool ShowContractsAdd
    {
      get => (bool)this["showContractsAdd"];
      set => this["showContractsAdd"] = value;
    }

    [ConfigurationProperty("showContractsExpander")]
    public bool ShowContractsExpander
    {
      get => (bool)this["showContractsExpander"];
      set => this["showContractsExpander"] = value;
    }

    [ConfigurationProperty("showCustomerAdd")]
    public bool ShowCustomerAdd
    {
      get => (bool)this["showCustomerAdd"];
      set => this["showCustomerAdd"] = value;
    }

    [ConfigurationProperty("showDashboardOverviewEdit")]
    public bool ShowDashboardOverviewEdit
    {
      get => (bool)this["showDashboardOverviewEdit"];
      set => this["showDashboardOverviewEdit"] = value;
    }

    [ConfigurationProperty("showHeaderDevTools")]
    public bool ShowHeaderDevTools
    {
      get => (bool)this["showHeaderDevTools"];
      set => this["showHeaderDevTools"] = value;
    }

    [ConfigurationProperty("showHeaderERPAbout")]
    public bool ShowHeaderERPAbout
    {
      get => (bool)this["showHeaderERPAbout"];
      set => this["showHeaderERPAbout"] = value;
    }

    [ConfigurationProperty("showServiceLocationsAdd")]
    public bool ShowServiceLocationsAdd
    {
      get => (bool)this["showServiceLocationsAdd"];
      set => this["showServiceLocationsAdd"] = value;
    }

    [ConfigurationProperty("showServiceLocationsDelete")]
    public bool ShowServiceLocationsDelete
    {
      get => (bool)this["showServiceLocationsDelete"];
      set => this["showServiceLocationsDelete"] = value;
    }

    [ConfigurationProperty("showMissedCollectionLogEvent")]
    public bool ShowMissedCollectionLogEvent
    {
      get => (bool)this["showMissedCollectionLogEvent"];
      set => this["showMissedCollectionLogEvent"] = value;
    }

    [ConfigurationProperty("showMissedCollectionCreateCallout")]
    public bool ShowMissedCollectionCreateCallout
    {
      get => (bool)this["showMissedCollectionCreateCallout"];
      set => this["showMissedCollectionCreateCallout"] = value;
    }

    [ConfigurationProperty("showFrequentDashboardActions")]
    public bool ShowFrequentDashboardActions
    {
      get => (bool)this["showFrequentDashboardActions"];
      set => this["showFrequentDashboardActions"] = value;
    }

    [ConfigurationProperty("showSiteOrderActionMenu")]
    public bool ShowSiteOrderActionMenu
    {
      get => (bool)this["showSiteOrderActionMenu"];
      set => this["showSiteOrderActionMenu"] = value;
    }

    [ConfigurationProperty("showSiteOrderAdd")]
    public bool ShowSiteOrderAdd
    {
      get => (bool)this["showSiteOrderAdd"];
      set => this["showSiteOrderAdd"] = value;
    }

    [ConfigurationProperty("showLoadReceiving")]
    public bool ShowLoadReceiving
    {
      get => (bool)this["showLoadReceiving"];
      set => this["showLoadReceiving"] = value;
    }

    [ConfigurationProperty("showAddUnplannedLoads")]
    public bool ShowAddUnplannedLoads
    {
      get => (bool)this["showAddUnplannedLoads"];
      set => this["showAddUnplannedLoads"] = value;
    }

  }

#else

  public class PlatformUIDeveloperElement : IPlatformUIDeveloperConfiguration
  { 
    public bool ShowCommunicationsAdd { get; }

    public bool ShowCommunicationsDropdown { get; }

    public bool ShowContactDelete { get; }

    public bool ShowContractsAdd { get; }

    public bool ShowContractsExpander { get; }

    public bool ShowCustomerAdd { get; }

    public bool ShowDashboardOverviewEdit { get; }

    public bool ShowHeaderDevTools { get; }

    public bool ShowHeaderERPAbout { get; }

    public bool ShowServiceLocationsAdd { get; }

    public bool ShowServiceLocationsDelete { get; }

    public bool ShowMissedCollectionLogEvent { get; }

    public bool ShowMissedCollectionCreateCallout { get; }

    public bool ShowFrequentDashboardActions { get; }

    public bool ShowSiteOrderActionMenu { get; }

    public bool ShowSiteOrderAdd { get; }

    public bool ShowLoadReceiving { get; }

    public bool ShowAddUnplannedLoads { get; }

    public PlatformUIDeveloperElement (XElement element)
    {
      ShowCommunicationsAdd = element?.Attribute("showCommunicationsAdd")?.Value != null ? bool.Parse(element.Attribute("showCommunicationsAdd").Value) : default(bool);
      ShowCommunicationsDropdown = element?.Attribute("showCommunicationsDropdown")?.Value != null ? bool.Parse(element.Attribute("showCommunicationsDropdown").Value) : default(bool);
      ShowContactDelete = element?.Attribute("showContactDelete")?.Value != null ? bool.Parse(element.Attribute("showContactDelete").Value) : default(bool);
      ShowContractsAdd = element?.Attribute("showContractsAdd")?.Value != null ? bool.Parse(element.Attribute("showContractsAdd").Value) : default(bool);
      ShowContractsExpander = element?.Attribute("showContractsExpander")?.Value != null ? bool.Parse(element.Attribute("showContractsExpander").Value) : default(bool);
      ShowCustomerAdd = element?.Attribute("showCustomerAdd")?.Value != null ? bool.Parse(element.Attribute("showCustomerAdd").Value) : default(bool);
      ShowDashboardOverviewEdit = element?.Attribute("showDashboardOverviewEdit")?.Value != null ? bool.Parse(element.Attribute("showDashboardOverviewEdit").Value) : default(bool);
      ShowHeaderDevTools = element?.Attribute("showHeaderDevTools")?.Value != null ? bool.Parse(element.Attribute("showHeaderDevTools").Value) : default(bool);
      ShowHeaderERPAbout = element?.Attribute("showHeaderERPAbout")?.Value != null ? bool.Parse(element.Attribute("showHeaderERPAbout").Value) : default(bool);
      ShowServiceLocationsAdd = element?.Attribute("showServiceLocationsAdd")?.Value != null ? bool.Parse(element.Attribute("showServiceLocationsAdd").Value) : default(bool);
      ShowServiceLocationsDelete = element?.Attribute("showServiceLocationsDelete")?.Value != null ? bool.Parse(element.Attribute("showServiceLocationsDelete").Value) : default(bool);
      ShowMissedCollectionLogEvent = element?.Attribute("showMissedCollectionLogEvent")?.Value != null ? bool.Parse(element.Attribute("showMissedCollectionLogEvent").Value) : default(bool);
      ShowMissedCollectionCreateCallout = element?.Attribute("showMissedCollectionCreateCallout")?.Value != null ? bool.Parse(element.Attribute("showMissedCollectionCreateCallout").Value) : default(bool);
      ShowFrequentDashboardActions = element?.Attribute("showFrequentDashboardActions")?.Value != null ? bool.Parse(element.Attribute("showFrequentDashboardActions").Value) : default(bool);
      ShowSiteOrderActionMenu = element?.Attribute("showSiteOrderActionMenu")?.Value != null ? bool.Parse(element.Attribute("showSiteOrderActionMenu").Value) : default(bool);
      ShowSiteOrderAdd = element?.Attribute("showSiteOrderAdd")?.Value != null ? bool.Parse(element.Attribute("showSiteOrderAdd").Value) : default(bool);
      ShowLoadReceiving = element?.Attribute("showLoadReceiving")?.Value != null ? bool.Parse(element.Attribute("showLoadReceiving").Value) : default(bool);
      ShowAddUnplannedLoads = element?.Attribute("showAddUnplannedLoads")?.Value != null ? bool.Parse(element.Attribute("showAddUnplannedLoads").Value) : default(bool);
    }
  }

#endif

  public interface IPlatformUIFeatureToggleConfiguration
  {
    bool ShowFeatureCustomerService { get; }

    bool ShowFeatureRouting { get; }

    bool ShowFeatureScale { get; }

    bool ShowFeatureMaterials { get; }

    bool ShowFeatureEquipmentInventory { get; }

    bool ShowFeatureAccounting { get; }

    bool ShowFeaturePricesAndProducts { get; }

    bool ShowFeatureReportsAnalytics { get; }

    bool ShowFeatureSettings { get; }

    bool ShowDesignLibrary { get; }

    bool ShowCustomerSiteHealthAndSafetyForms { get; }

    bool ShowCustomerPaidToDateBrowser { get; }

    bool ShowSiteOrderBrowserSoldWeight { get; }

    bool ShowFeatureExtensibility { get; }

  }

#if NETFRAMEWORK 

  public class PlatformUIFeatureToggleElement : ConfigurationElement, IPlatformUIFeatureToggleConfiguration
  {
    [ConfigurationProperty("showFeatureCustomerService")]
    public bool ShowFeatureCustomerService
    {
      get => (bool)this["showFeatureCustomerService"];
      set => this["showFeatureCustomerService"] = value;
    }

    [ConfigurationProperty("showFeatureRouting")]
    public bool ShowFeatureRouting
    {
      get => (bool)this["showFeatureRouting"];
      set => this["showFeatureRouting"] = value;
    }

    [ConfigurationProperty("showFeatureScale")]
    public bool ShowFeatureScale
    {
      get => (bool)this["showFeatureScale"];
      set => this["showFeatureScale"] = value;
    }

    [ConfigurationProperty("showFeatureMaterials")]
    public bool ShowFeatureMaterials
    {
      get => (bool)this["showFeatureMaterials"];
      set => this["showFeatureMaterials"] = value;
    }

    [ConfigurationProperty("showFeatureEquipmentInventory")]
    public bool ShowFeatureEquipmentInventory
    {
      get => (bool)this["showFeatureEquipmentInventory"];
      set => this["showFeatureEquipmentInventory"] = value;
    }

    [ConfigurationProperty("showFeatureAccounting")]
    public bool ShowFeatureAccounting
    {
      get => (bool)this["showFeatureAccounting"];
      set => this["showFeatureAccounting"] = value;
    }

    [ConfigurationProperty("showFeaturePricesAndProducts")]
    public bool ShowFeaturePricesAndProducts
    {
      get => (bool)this["showFeaturePricesAndProducts"];
      set => this["showFeaturePricesAndProducts"] = value;
    }

    [ConfigurationProperty("showFeatureReportsAnalytics")]
    public bool ShowFeatureReportsAnalytics
    {
      get => (bool)this["showFeatureReportsAnalytics"];
      set => this["showFeatureReportsAnalytics"] = value;
    }

    [ConfigurationProperty("showFeatureSettings")]
    public bool ShowFeatureSettings
    {
      get => (bool)this["showFeatureSettings"];
      set => this["showFeatureSettings"] = value;
    }

    [ConfigurationProperty("showDesignLibrary")]
    public bool ShowDesignLibrary
    {
      get => (bool)this["showDesignLibrary"];
      set => this["showDesignLibrary"] = value;
    }

    [ConfigurationProperty("ShowCustomerSiteHealthAndSafetyForms")]
    public bool ShowCustomerSiteHealthAndSafetyForms
    {
      get => (bool)this["ShowCustomerSiteHealthAndSafetyForms"];
      set => this["ShowCustomerSiteHealthAndSafetyForms"] = value;
    }

    [ConfigurationProperty("showCustomerPaidToDateBrowser")]
    public bool ShowCustomerPaidToDateBrowser
    {
      get => (bool)this["showCustomerPaidToDateBrowser"];
      set => this["showCustomerPaidToDateBrowser"] = value;
    }

    [ConfigurationProperty("showSiteOrderBrowserSoldWeight")]
    public bool ShowSiteOrderBrowserSoldWeight
    {
      get => (bool)this["showSiteOrderBrowserSoldWeight"];
      set => this["showSiteOrderBrowserSoldWeight"] = value;
    }

    [ConfigurationProperty("showFeatureExtensibility")]
    public bool ShowFeatureExtensibility
    {
      get => (bool)this["showFeatureExtensibility"];
      set => this["showFeatureExtensibility"] = value;
    }

  }

#else

  public class PlatformUIFeatureToggleElement : IPlatformUIFeatureToggleConfiguration
  { 
    public bool ShowFeatureCustomerService { get; }

    public bool ShowFeatureRouting { get; }

    public bool ShowFeatureScale { get; }

    public bool ShowFeatureMaterials { get; }

    public bool ShowFeatureEquipmentInventory { get; }

    public bool ShowFeatureAccounting { get; }

    public bool ShowFeaturePricesAndProducts { get; }

    public bool ShowFeatureReportsAnalytics { get; }

    public bool ShowFeatureSettings { get; }

    public bool ShowDesignLibrary { get; }

    public bool ShowCustomerSiteHealthAndSafetyForms { get; }

    public bool ShowCustomerPaidToDateBrowser { get; }

    public bool ShowSiteOrderBrowserSoldWeight { get; }

    public bool ShowFeatureExtensibility { get; }

    public PlatformUIFeatureToggleElement (XElement element)
    {
      ShowFeatureCustomerService = element?.Attribute("showFeatureCustomerService")?.Value != null ? bool.Parse(element.Attribute("showFeatureCustomerService").Value) : default(bool);
      ShowFeatureRouting = element?.Attribute("showFeatureRouting")?.Value != null ? bool.Parse(element.Attribute("showFeatureRouting").Value) : default(bool);
      ShowFeatureScale = element?.Attribute("showFeatureScale")?.Value != null ? bool.Parse(element.Attribute("showFeatureScale").Value) : default(bool);
      ShowFeatureMaterials = element?.Attribute("showFeatureMaterials")?.Value != null ? bool.Parse(element.Attribute("showFeatureMaterials").Value) : default(bool);
      ShowFeatureEquipmentInventory = element?.Attribute("showFeatureEquipmentInventory")?.Value != null ? bool.Parse(element.Attribute("showFeatureEquipmentInventory").Value) : default(bool);
      ShowFeatureAccounting = element?.Attribute("showFeatureAccounting")?.Value != null ? bool.Parse(element.Attribute("showFeatureAccounting").Value) : default(bool);
      ShowFeaturePricesAndProducts = element?.Attribute("showFeaturePricesAndProducts")?.Value != null ? bool.Parse(element.Attribute("showFeaturePricesAndProducts").Value) : default(bool);
      ShowFeatureReportsAnalytics = element?.Attribute("showFeatureReportsAnalytics")?.Value != null ? bool.Parse(element.Attribute("showFeatureReportsAnalytics").Value) : default(bool);
      ShowFeatureSettings = element?.Attribute("showFeatureSettings")?.Value != null ? bool.Parse(element.Attribute("showFeatureSettings").Value) : default(bool);
      ShowDesignLibrary = element?.Attribute("showDesignLibrary")?.Value != null ? bool.Parse(element.Attribute("showDesignLibrary").Value) : default(bool);
      ShowCustomerSiteHealthAndSafetyForms = element?.Attribute("ShowCustomerSiteHealthAndSafetyForms")?.Value != null ? bool.Parse(element.Attribute("ShowCustomerSiteHealthAndSafetyForms").Value) : default(bool);
      ShowCustomerPaidToDateBrowser = element?.Attribute("showCustomerPaidToDateBrowser")?.Value != null ? bool.Parse(element.Attribute("showCustomerPaidToDateBrowser").Value) : default(bool);
      ShowSiteOrderBrowserSoldWeight = element?.Attribute("showSiteOrderBrowserSoldWeight")?.Value != null ? bool.Parse(element.Attribute("showSiteOrderBrowserSoldWeight").Value) : default(bool);
      ShowFeatureExtensibility = element?.Attribute("showFeatureExtensibility")?.Value != null ? bool.Parse(element.Attribute("showFeatureExtensibility").Value) : default(bool);
    }
  }

#endif

  public interface IJobSystemConfiguration
  {
    string QueuePrefix { get; }

    int? ScheduledJobQueueInterval { get; }

    string ScheduledJobUserId { get; }

  }

#if NETFRAMEWORK 

  public class JobSystemElement : ConfigurationElement, IJobSystemConfiguration
  {
    [ConfigurationProperty("queuePrefix")]
    public string QueuePrefix
    {
      get => (string)this["queuePrefix"];
      set => this["queuePrefix"] = value;
    }

    [ConfigurationProperty("scheduledJobQueueInterval")]
    public int? ScheduledJobQueueInterval
    {
      get => (int?)this["scheduledJobQueueInterval"];
      set => this["scheduledJobQueueInterval"] = value;
    }

    [ConfigurationProperty("scheduledJobUserId", IsRequired = true)]
    public string ScheduledJobUserId
    {
      get => (string)this["scheduledJobUserId"];
      set => this["scheduledJobUserId"] = value;
    }

  }

#else

  public class JobSystemElement : IJobSystemConfiguration
  { 
    public string QueuePrefix { get; }

    public int? ScheduledJobQueueInterval { get; }

    public string ScheduledJobUserId { get; }

    public JobSystemElement (XElement element)
    {
      QueuePrefix = element?.Attribute("queuePrefix")?.Value != null ? element.Attribute("queuePrefix").Value : default(string);
      ScheduledJobQueueInterval = element?.Attribute("scheduledJobQueueInterval")?.Value != null ? int.Parse(element.Attribute("scheduledJobQueueInterval").Value, CultureInfo.InvariantCulture) : default(int?);
      ScheduledJobUserId = element?.Attribute("scheduledJobUserId")?.Value != null ? element.Attribute("scheduledJobUserId").Value : default(string);
    }
  }

#endif

  public interface IBroadcastConfiguration
  {
    string QueuePrefix { get; }

  }

#if NETFRAMEWORK 

  public class BroadcastElement : ConfigurationElement, IBroadcastConfiguration
  {
    [ConfigurationProperty("queuePrefix")]
    public string QueuePrefix
    {
      get => (string)this["queuePrefix"];
      set => this["queuePrefix"] = value;
    }

  }

#else

  public class BroadcastElement : IBroadcastConfiguration
  { 
    public string QueuePrefix { get; }

    public BroadcastElement (XElement element)
    {
      QueuePrefix = element?.Attribute("queuePrefix")?.Value != null ? element.Attribute("queuePrefix").Value : default(string);
    }
  }

#endif

  public interface IAzureAppConfigurationConfiguration
  {
    string TopicName { get; }

    IEnumerable<IKeyPrefixConfiguration> GetKeyPrefixes();
  }

#if NETFRAMEWORK 

  public class AzureAppConfigurationElement : ConfigurationElement, IAzureAppConfigurationConfiguration
  {
    [ConfigurationProperty("topicName")]
    public string TopicName
    {
      get => (string)this["topicName"];
      set => this["topicName"] = value;
    }

    [ConfigurationProperty("keyPrefixes", IsRequired = true)]
    public KeyPrefixElementCollection KeyPrefixes
    {
      get => (KeyPrefixElementCollection)this["keyPrefixes"];
      set => this["keyPrefixes"] = value;
    }

    IEnumerable<IKeyPrefixConfiguration> IAzureAppConfigurationConfiguration.GetKeyPrefixes()
    {
      return KeyPrefixes?.Cast<KeyPrefixElement>() ?? Enumerable.Empty<KeyPrefixElement>();
    }

  }

#else

  public class AzureAppConfigurationElement : IAzureAppConfigurationConfiguration
  { 
    public string TopicName { get; }

    public IList<KeyPrefixElement> KeyPrefixes { get; }

    IEnumerable<IKeyPrefixConfiguration> IAzureAppConfigurationConfiguration.GetKeyPrefixes()
    {
      return KeyPrefixes;
    }

    public AzureAppConfigurationElement (XElement element)
    {
      TopicName = element?.Attribute("topicName")?.Value != null ? element.Attribute("topicName").Value : default(string);
      KeyPrefixes = element?.Element("keyPrefixes") != null
        ? new ReadOnlyCollection<KeyPrefixElement>(element.Element("keyPrefixes").Elements("add").Select(x => new KeyPrefixElement(x)).ToList())
        : (IList<KeyPrefixElement>)new KeyPrefixElement[0];
    }
  }

#endif

#if NETFRAMEWORK

  public class KeyPrefixElementCollection : ConfigurationElementCollection
  {
    protected override ConfigurationElement CreateNewElement()
    {
      return new KeyPrefixElement();
    }

    protected override object GetElementKey(ConfigurationElement element)
    {
      return ((KeyPrefixElement)element).Prefix;
    }
  }
    
# endif

  public interface IKeyPrefixConfiguration
  {
    string Prefix { get; }

    string Type { get; }

  }

#if NETFRAMEWORK 

  public class KeyPrefixElement : ConfigurationElement, IKeyPrefixConfiguration
  {
    [ConfigurationProperty("prefix", IsKey = true, IsRequired = true)]
    public string Prefix
    {
      get => (string)this["prefix"];
      set => this["prefix"] = value;
    }

    [ConfigurationProperty("type", IsKey = true, IsRequired = true)]
    public string Type
    {
      get => (string)this["type"];
      set => this["type"] = value;
    }

  }

#else

  public class KeyPrefixElement : IKeyPrefixConfiguration
  { 
    public string Prefix { get; }

    public string Type { get; }

    public KeyPrefixElement (XElement element)
    {
      Prefix = element?.Attribute("prefix")?.Value != null ? element.Attribute("prefix").Value : default(string);
      Type = element?.Attribute("type")?.Value != null ? element.Attribute("type").Value : default(string);
    }
  }

#endif

  public interface IDiagnosticsConfiguration
  {
    string DisabledDiagnostics { get; }

    string ExpectedDatabaseName { get; }

  }

#if NETFRAMEWORK 

  public class DiagnosticsElement : ConfigurationElement, IDiagnosticsConfiguration
  {
    [ConfigurationProperty("disabledDiagnostics", IsRequired = true)]
    public string DisabledDiagnostics
    {
      get => (string)this["disabledDiagnostics"];
      set => this["disabledDiagnostics"] = value;
    }

    [ConfigurationProperty("expectedDatabaseName", IsRequired = true)]
    public string ExpectedDatabaseName
    {
      get => (string)this["expectedDatabaseName"];
      set => this["expectedDatabaseName"] = value;
    }

  }

#else

  public class DiagnosticsElement : IDiagnosticsConfiguration
  { 
    public string DisabledDiagnostics { get; }

    public string ExpectedDatabaseName { get; }

    public DiagnosticsElement (XElement element)
    {
      DisabledDiagnostics = element?.Attribute("disabledDiagnostics")?.Value != null ? element.Attribute("disabledDiagnostics").Value : default(string);
      ExpectedDatabaseName = element?.Attribute("expectedDatabaseName")?.Value != null ? element.Attribute("expectedDatabaseName").Value : default(string);
    }
  }

#endif

  public interface ICommsServerProtocolsConfiguration
  {
    string ServiceRoot { get; }

    string Key { get; }

  }

#if NETFRAMEWORK 

  public class CommsServerProtocolsElement : ConfigurationElement, ICommsServerProtocolsConfiguration
  {
    [ConfigurationProperty("serviceRoot", IsRequired = true)]
    public string ServiceRoot
    {
      get => (string)this["serviceRoot"];
      set => this["serviceRoot"] = value;
    }

    [ConfigurationProperty("key", IsRequired = true)]
    public string Key
    {
      get => (string)this["key"];
      set => this["key"] = value;
    }

  }

#else

  public class CommsServerProtocolsElement : ICommsServerProtocolsConfiguration
  { 
    public string ServiceRoot { get; }

    public string Key { get; }

    public CommsServerProtocolsElement (XElement element)
    {
      ServiceRoot = element?.Attribute("serviceRoot")?.Value != null ? element.Attribute("serviceRoot").Value : default(string);
      Key = element?.Attribute("key")?.Value != null ? element.Attribute("key").Value : default(string);
    }
  }

#endif

  public interface ISystemConfigurationsConfiguration
  {
    ISystemConfigurationPasswordConfiguration Password { get; }
  }

#if NETFRAMEWORK 

  public class SystemConfigurationsElement : ConfigurationElement, ISystemConfigurationsConfiguration
  {
    [ConfigurationProperty("password", IsRequired = true)]
    public SystemConfigurationPasswordElement Password
    {
      get => (SystemConfigurationPasswordElement)this["password"];
      set => this["password"] = value;
    }

    ISystemConfigurationPasswordConfiguration ISystemConfigurationsConfiguration.Password => Password;

  }

#else

  public class SystemConfigurationsElement : ISystemConfigurationsConfiguration
  { 
    public ISystemConfigurationPasswordConfiguration Password { get; }

    public SystemConfigurationsElement (XElement element)
    {
      Password = element != null ? new SystemConfigurationPasswordElement(element.Element("password")) : null;
    }
  }

#endif

  public interface ISystemConfigurationPasswordConfiguration
  {
    int NumberlockAfterAttempts { get; }

    int MaxLifeDays { get; }

    int MinLength { get; }

    int MinLower { get; }

    int MinUpper { get; }

    int MinDigits { get; }

    int MinSymbols { get; }

    int DistinctInterval { get; }

  }

#if NETFRAMEWORK 

  public class SystemConfigurationPasswordElement : ConfigurationElement, ISystemConfigurationPasswordConfiguration
  {
    [ConfigurationProperty("numberlockAfterAttempts", IsRequired = true)]
    public int NumberlockAfterAttempts
    {
      get => (int)this["numberlockAfterAttempts"];
      set => this["numberlockAfterAttempts"] = value;
    }

    [ConfigurationProperty("maxLifeDays", IsRequired = true)]
    public int MaxLifeDays
    {
      get => (int)this["maxLifeDays"];
      set => this["maxLifeDays"] = value;
    }

    [ConfigurationProperty("minLength", IsRequired = true)]
    public int MinLength
    {
      get => (int)this["minLength"];
      set => this["minLength"] = value;
    }

    [ConfigurationProperty("minLower", IsRequired = true)]
    public int MinLower
    {
      get => (int)this["minLower"];
      set => this["minLower"] = value;
    }

    [ConfigurationProperty("minUpper", IsRequired = true)]
    public int MinUpper
    {
      get => (int)this["minUpper"];
      set => this["minUpper"] = value;
    }

    [ConfigurationProperty("minDigits", IsRequired = true)]
    public int MinDigits
    {
      get => (int)this["minDigits"];
      set => this["minDigits"] = value;
    }

    [ConfigurationProperty("minSymbols", IsRequired = true)]
    public int MinSymbols
    {
      get => (int)this["minSymbols"];
      set => this["minSymbols"] = value;
    }

    [ConfigurationProperty("distinctInterval", IsRequired = true)]
    public int DistinctInterval
    {
      get => (int)this["distinctInterval"];
      set => this["distinctInterval"] = value;
    }

  }

#else

  public class SystemConfigurationPasswordElement : ISystemConfigurationPasswordConfiguration
  { 
    public int NumberlockAfterAttempts { get; }

    public int MaxLifeDays { get; }

    public int MinLength { get; }

    public int MinLower { get; }

    public int MinUpper { get; }

    public int MinDigits { get; }

    public int MinSymbols { get; }

    public int DistinctInterval { get; }

    public SystemConfigurationPasswordElement (XElement element)
    {
      NumberlockAfterAttempts = element?.Attribute("numberlockAfterAttempts")?.Value != null ? int.Parse(element.Attribute("numberlockAfterAttempts").Value, CultureInfo.InvariantCulture) : default(int);
      MaxLifeDays = element?.Attribute("maxLifeDays")?.Value != null ? int.Parse(element.Attribute("maxLifeDays").Value, CultureInfo.InvariantCulture) : default(int);
      MinLength = element?.Attribute("minLength")?.Value != null ? int.Parse(element.Attribute("minLength").Value, CultureInfo.InvariantCulture) : default(int);
      MinLower = element?.Attribute("minLower")?.Value != null ? int.Parse(element.Attribute("minLower").Value, CultureInfo.InvariantCulture) : default(int);
      MinUpper = element?.Attribute("minUpper")?.Value != null ? int.Parse(element.Attribute("minUpper").Value, CultureInfo.InvariantCulture) : default(int);
      MinDigits = element?.Attribute("minDigits")?.Value != null ? int.Parse(element.Attribute("minDigits").Value, CultureInfo.InvariantCulture) : default(int);
      MinSymbols = element?.Attribute("minSymbols")?.Value != null ? int.Parse(element.Attribute("minSymbols").Value, CultureInfo.InvariantCulture) : default(int);
      DistinctInterval = element?.Attribute("distinctInterval")?.Value != null ? int.Parse(element.Attribute("distinctInterval").Value, CultureInfo.InvariantCulture) : default(int);
    }
  }

#endif

  public interface ICommsServerConfiguration
  {
    string UserName { get; }

    bool AllowAlteranteTransport { get; }

    ICommsServerScaleConfiguration Scale { get; }
    ICommsServerTransportDispatchConfiguration TransportDispatch { get; }
  }

#if NETFRAMEWORK 

  public class CommsServerElement : ConfigurationElement, ICommsServerConfiguration
  {
    [ConfigurationProperty("userName")]
    public string UserName
    {
      get => (string)this["userName"];
      set => this["userName"] = value;
    }

    [ConfigurationProperty("allowAlteranteTransport")]
    public bool AllowAlteranteTransport
    {
      get => (bool)this["allowAlteranteTransport"];
      set => this["allowAlteranteTransport"] = value;
    }

    [ConfigurationProperty("scale")]
    public CommsServerScaleElement Scale
    {
      get => (CommsServerScaleElement)this["scale"];
      set => this["scale"] = value;
    }

    ICommsServerScaleConfiguration ICommsServerConfiguration.Scale => Scale;

    [ConfigurationProperty("transportDispatch")]
    public CommsServerTransportDispatchElement TransportDispatch
    {
      get => (CommsServerTransportDispatchElement)this["transportDispatch"];
      set => this["transportDispatch"] = value;
    }

    ICommsServerTransportDispatchConfiguration ICommsServerConfiguration.TransportDispatch => TransportDispatch;

  }

#else

  public class CommsServerElement : ICommsServerConfiguration
  { 
    public string UserName { get; }

    public bool AllowAlteranteTransport { get; }

    public ICommsServerScaleConfiguration Scale { get; }

    public ICommsServerTransportDispatchConfiguration TransportDispatch { get; }

    public CommsServerElement (XElement element)
    {
      UserName = element?.Attribute("userName")?.Value != null ? element.Attribute("userName").Value : default(string);
      AllowAlteranteTransport = element?.Attribute("allowAlteranteTransport")?.Value != null ? bool.Parse(element.Attribute("allowAlteranteTransport").Value) : default(bool);
      Scale = element != null ? new CommsServerScaleElement(element.Element("scale")) : null;
      TransportDispatch = element != null ? new CommsServerTransportDispatchElement(element.Element("transportDispatch")) : null;
    }
  }

#endif

  public interface ICommsServerScaleConfiguration
  {
    string Url { get; }

    string AuthKey { get; }

    string Protocol { get; }

    string AzureServiceBusConnectionStringName { get; }

  }

#if NETFRAMEWORK 

  public class CommsServerScaleElement : ConfigurationElement, ICommsServerScaleConfiguration
  {
    [ConfigurationProperty("url")]
    public string Url
    {
      get => (string)this["url"];
      set => this["url"] = value;
    }

    [ConfigurationProperty("authKey")]
    public string AuthKey
    {
      get => (string)this["authKey"];
      set => this["authKey"] = value;
    }

    [ConfigurationProperty("protocol")]
    public string Protocol
    {
      get => (string)this["protocol"];
      set => this["protocol"] = value;
    }

    [ConfigurationProperty("azureServiceBusConnectionStringName")]
    public string AzureServiceBusConnectionStringName
    {
      get => (string)this["azureServiceBusConnectionStringName"];
      set => this["azureServiceBusConnectionStringName"] = value;
    }

  }

#else

  public class CommsServerScaleElement : ICommsServerScaleConfiguration
  { 
    public string Url { get; }

    public string AuthKey { get; }

    public string Protocol { get; }

    public string AzureServiceBusConnectionStringName { get; }

    public CommsServerScaleElement (XElement element)
    {
      Url = element?.Attribute("url")?.Value != null ? element.Attribute("url").Value : default(string);
      AuthKey = element?.Attribute("authKey")?.Value != null ? element.Attribute("authKey").Value : default(string);
      Protocol = element?.Attribute("protocol")?.Value != null ? element.Attribute("protocol").Value : default(string);
      AzureServiceBusConnectionStringName = element?.Attribute("azureServiceBusConnectionStringName")?.Value != null ? element.Attribute("azureServiceBusConnectionStringName").Value : default(string);
    }
  }

#endif

  public interface ICommsServerTransportDispatchConfiguration
  {
    string Url { get; }

    string Instance { get; }

    string AuthKey { get; }

    string Protocol { get; }

    string AzureServiceBusConnectionStringName { get; }

  }

#if NETFRAMEWORK 

  public class CommsServerTransportDispatchElement : ConfigurationElement, ICommsServerTransportDispatchConfiguration
  {
    [ConfigurationProperty("url")]
    public string Url
    {
      get => (string)this["url"];
      set => this["url"] = value;
    }

    [ConfigurationProperty("instance")]
    public string Instance
    {
      get => (string)this["instance"];
      set => this["instance"] = value;
    }

    [ConfigurationProperty("authKey")]
    public string AuthKey
    {
      get => (string)this["authKey"];
      set => this["authKey"] = value;
    }

    [ConfigurationProperty("protocol")]
    public string Protocol
    {
      get => (string)this["protocol"];
      set => this["protocol"] = value;
    }

    [ConfigurationProperty("azureServiceBusConnectionStringName")]
    public string AzureServiceBusConnectionStringName
    {
      get => (string)this["azureServiceBusConnectionStringName"];
      set => this["azureServiceBusConnectionStringName"] = value;
    }

  }

#else

  public class CommsServerTransportDispatchElement : ICommsServerTransportDispatchConfiguration
  { 
    public string Url { get; }

    public string Instance { get; }

    public string AuthKey { get; }

    public string Protocol { get; }

    public string AzureServiceBusConnectionStringName { get; }

    public CommsServerTransportDispatchElement (XElement element)
    {
      Url = element?.Attribute("url")?.Value != null ? element.Attribute("url").Value : default(string);
      Instance = element?.Attribute("instance")?.Value != null ? element.Attribute("instance").Value : default(string);
      AuthKey = element?.Attribute("authKey")?.Value != null ? element.Attribute("authKey").Value : default(string);
      Protocol = element?.Attribute("protocol")?.Value != null ? element.Attribute("protocol").Value : default(string);
      AzureServiceBusConnectionStringName = element?.Attribute("azureServiceBusConnectionStringName")?.Value != null ? element.Attribute("azureServiceBusConnectionStringName").Value : default(string);
    }
  }

#endif

  public interface IBlobStorageConfiguration
  {
    string Mode { get; }

    IAzureBlobStorageConfiguration Azure { get; }
    IFileSystemBlobStorageConfiguration FileSystem { get; }
  }

#if NETFRAMEWORK 

  public class BlobStorageElement : ConfigurationElement, IBlobStorageConfiguration
  {
    [ConfigurationProperty("mode", IsRequired = true)]
    public string Mode
    {
      get => (string)this["mode"];
      set => this["mode"] = value;
    }

    [ConfigurationProperty("azure")]
    public AzureBlobStorageElement Azure
    {
      get => (AzureBlobStorageElement)this["azure"];
      set => this["azure"] = value;
    }

    IAzureBlobStorageConfiguration IBlobStorageConfiguration.Azure => Azure;

    [ConfigurationProperty("fileSystem")]
    public FileSystemBlobStorageElement FileSystem
    {
      get => (FileSystemBlobStorageElement)this["fileSystem"];
      set => this["fileSystem"] = value;
    }

    IFileSystemBlobStorageConfiguration IBlobStorageConfiguration.FileSystem => FileSystem;

  }

#else

  public class BlobStorageElement : IBlobStorageConfiguration
  { 
    public string Mode { get; }

    public IAzureBlobStorageConfiguration Azure { get; }

    public IFileSystemBlobStorageConfiguration FileSystem { get; }

    public BlobStorageElement (XElement element)
    {
      Mode = element?.Attribute("mode")?.Value != null ? element.Attribute("mode").Value : default(string);
      Azure = element != null ? new AzureBlobStorageElement(element.Element("azure")) : null;
      FileSystem = element != null ? new FileSystemBlobStorageElement(element.Element("fileSystem")) : null;
    }
  }

#endif

  public interface IAzureBlobStorageConfiguration
  {
    string Container { get; }

  }

#if NETFRAMEWORK 

  public class AzureBlobStorageElement : ConfigurationElement, IAzureBlobStorageConfiguration
  {
    [ConfigurationProperty("container", IsRequired = true)]
    public string Container
    {
      get => (string)this["container"];
      set => this["container"] = value;
    }

  }

#else

  public class AzureBlobStorageElement : IAzureBlobStorageConfiguration
  { 
    public string Container { get; }

    public AzureBlobStorageElement (XElement element)
    {
      Container = element?.Attribute("container")?.Value != null ? element.Attribute("container").Value : default(string);
    }
  }

#endif

  public interface IFileSystemBlobStorageConfiguration
  {
    string Store { get; }

  }

#if NETFRAMEWORK 

  public class FileSystemBlobStorageElement : ConfigurationElement, IFileSystemBlobStorageConfiguration
  {
    [ConfigurationProperty("store", IsRequired = true)]
    public string Store
    {
      get => (string)this["store"];
      set => this["store"] = value;
    }

  }

#else

  public class FileSystemBlobStorageElement : IFileSystemBlobStorageConfiguration
  { 
    public string Store { get; }

    public FileSystemBlobStorageElement (XElement element)
    {
      Store = element?.Attribute("store")?.Value != null ? element.Attribute("store").Value : default(string);
    }
  }

#endif

  public interface IApiConfiguration
  {
    IEnumerable<IEnabledApiConfiguration> GetEnabledApis();
  }

#if NETFRAMEWORK 

  public class ApiElement : ConfigurationElement, IApiConfiguration
  {
    [ConfigurationProperty("enabledApis", IsRequired = true)]
    public EnabledApiElementCollection EnabledApis
    {
      get => (EnabledApiElementCollection)this["enabledApis"];
      set => this["enabledApis"] = value;
    }

    IEnumerable<IEnabledApiConfiguration> IApiConfiguration.GetEnabledApis()
    {
      return EnabledApis?.Cast<EnabledApiElement>() ?? Enumerable.Empty<EnabledApiElement>();
    }

  }

#else

  public class ApiElement : IApiConfiguration
  { 
    public IList<EnabledApiElement> EnabledApis { get; }

    IEnumerable<IEnabledApiConfiguration> IApiConfiguration.GetEnabledApis()
    {
      return EnabledApis;
    }

    public ApiElement (XElement element)
    {
      EnabledApis = element?.Element("enabledApis") != null
        ? new ReadOnlyCollection<EnabledApiElement>(element.Element("enabledApis").Elements("add").Select(x => new EnabledApiElement(x)).ToList())
        : (IList<EnabledApiElement>)new EnabledApiElement[0];
    }
  }

#endif

#if NETFRAMEWORK

  public class EnabledApiElementCollection : ConfigurationElementCollection
  {
    protected override ConfigurationElement CreateNewElement()
    {
      return new EnabledApiElement();
    }

    protected override object GetElementKey(ConfigurationElement element)
    {
      return ((EnabledApiElement)element).Name;
    }
  }
    
# endif

  public interface IEnabledApiConfiguration
  {
    string Name { get; }

  }

#if NETFRAMEWORK 

  public class EnabledApiElement : ConfigurationElement, IEnabledApiConfiguration
  {
    [ConfigurationProperty("name", IsKey = true, IsRequired = true)]
    public string Name
    {
      get => (string)this["name"];
      set => this["name"] = value;
    }

  }

#else

  public class EnabledApiElement : IEnabledApiConfiguration
  { 
    public string Name { get; }

    public EnabledApiElement (XElement element)
    {
      Name = element?.Attribute("name")?.Value != null ? element.Attribute("name").Value : default(string);
    }
  }

#endif

  public interface ITempFileStorageConfiguration
  {
    TimeSpan? Ttl { get; }

    ITempFileAzureStorageConfiguration Azure { get; }
    ITempFileFileStorageConfiguration FileSystem { get; }
  }

#if NETFRAMEWORK 

  public class TempFileStorageElement : ConfigurationElement, ITempFileStorageConfiguration
  {
    [ConfigurationProperty("ttl")]
    public TimeSpan? Ttl
    {
      get => (TimeSpan?)this["ttl"];
      set => this["ttl"] = value;
    }

    [ConfigurationProperty("azure")]
    public TempFileAzureStorageElement Azure
    {
      get => (TempFileAzureStorageElement)this["azure"];
      set => this["azure"] = value;
    }

    ITempFileAzureStorageConfiguration ITempFileStorageConfiguration.Azure => Azure;

    [ConfigurationProperty("fileSystem")]
    public TempFileFileStorageElement FileSystem
    {
      get => (TempFileFileStorageElement)this["fileSystem"];
      set => this["fileSystem"] = value;
    }

    ITempFileFileStorageConfiguration ITempFileStorageConfiguration.FileSystem => FileSystem;

  }

#else

  public class TempFileStorageElement : ITempFileStorageConfiguration
  { 
    public TimeSpan? Ttl { get; }

    public ITempFileAzureStorageConfiguration Azure { get; }

    public ITempFileFileStorageConfiguration FileSystem { get; }

    public TempFileStorageElement (XElement element)
    {
      Ttl = element?.Attribute("ttl")?.Value != null ? TimeSpan.Parse(element.Attribute("ttl").Value, CultureInfo.InvariantCulture) : default(TimeSpan?);
      Azure = element != null ? new TempFileAzureStorageElement(element.Element("azure")) : null;
      FileSystem = element != null ? new TempFileFileStorageElement(element.Element("fileSystem")) : null;
    }
  }

#endif

  public interface ITempFileAzureStorageConfiguration
  {
    string Container { get; }

  }

#if NETFRAMEWORK 

  public class TempFileAzureStorageElement : ConfigurationElement, ITempFileAzureStorageConfiguration
  {
    [ConfigurationProperty("container", IsRequired = true)]
    public string Container
    {
      get => (string)this["container"];
      set => this["container"] = value;
    }

  }

#else

  public class TempFileAzureStorageElement : ITempFileAzureStorageConfiguration
  { 
    public string Container { get; }

    public TempFileAzureStorageElement (XElement element)
    {
      Container = element?.Attribute("container")?.Value != null ? element.Attribute("container").Value : default(string);
    }
  }

#endif

  public interface ITempFileFileStorageConfiguration
  {
    string Store { get; }

  }

#if NETFRAMEWORK 

  public class TempFileFileStorageElement : ConfigurationElement, ITempFileFileStorageConfiguration
  {
    [ConfigurationProperty("store")]
    public string Store
    {
      get => (string)this["store"];
      set => this["store"] = value;
    }

  }

#else

  public class TempFileFileStorageElement : ITempFileFileStorageConfiguration
  { 
    public string Store { get; }

    public TempFileFileStorageElement (XElement element)
    {
      Store = element?.Attribute("store")?.Value != null ? element.Attribute("store").Value : default(string);
    }
  }

#endif

  public interface IDataSetsConfiguration
  {
    int? Concurrency { get; }

    string Queue { get; }

    IDataSetStorageConfiguration Storage { get; }
  }

#if NETFRAMEWORK 

  public class DataSetsElement : ConfigurationElement, IDataSetsConfiguration
  {
    [ConfigurationProperty("concurrency")]
    public int? Concurrency
    {
      get => (int?)this["concurrency"];
      set => this["concurrency"] = value;
    }

    [ConfigurationProperty("queue", IsRequired = true)]
    public string Queue
    {
      get => (string)this["queue"];
      set => this["queue"] = value;
    }

    [ConfigurationProperty("storage")]
    public DataSetStorageElement Storage
    {
      get => (DataSetStorageElement)this["storage"];
      set => this["storage"] = value;
    }

    IDataSetStorageConfiguration IDataSetsConfiguration.Storage => Storage;

  }

#else

  public class DataSetsElement : IDataSetsConfiguration
  { 
    public int? Concurrency { get; }

    public string Queue { get; }

    public IDataSetStorageConfiguration Storage { get; }

    public DataSetsElement (XElement element)
    {
      Concurrency = element?.Attribute("concurrency")?.Value != null ? int.Parse(element.Attribute("concurrency").Value, CultureInfo.InvariantCulture) : default(int?);
      Queue = element?.Attribute("queue")?.Value != null ? element.Attribute("queue").Value : default(string);
      Storage = element != null ? new DataSetStorageElement(element.Element("storage")) : null;
    }
  }

#endif

  public interface IDataSetStorageConfiguration
  {
    TimeSpan? Ttl { get; }

    IDataSetAzureStorageConfiguration Azure { get; }
    IDataSetFileStorageConfiguration FileSystem { get; }
  }

#if NETFRAMEWORK 

  public class DataSetStorageElement : ConfigurationElement, IDataSetStorageConfiguration
  {
    [ConfigurationProperty("ttl")]
    public TimeSpan? Ttl
    {
      get => (TimeSpan?)this["ttl"];
      set => this["ttl"] = value;
    }

    [ConfigurationProperty("azure")]
    public DataSetAzureStorageElement Azure
    {
      get => (DataSetAzureStorageElement)this["azure"];
      set => this["azure"] = value;
    }

    IDataSetAzureStorageConfiguration IDataSetStorageConfiguration.Azure => Azure;

    [ConfigurationProperty("fileSystem")]
    public DataSetFileStorageElement FileSystem
    {
      get => (DataSetFileStorageElement)this["fileSystem"];
      set => this["fileSystem"] = value;
    }

    IDataSetFileStorageConfiguration IDataSetStorageConfiguration.FileSystem => FileSystem;

  }

#else

  public class DataSetStorageElement : IDataSetStorageConfiguration
  { 
    public TimeSpan? Ttl { get; }

    public IDataSetAzureStorageConfiguration Azure { get; }

    public IDataSetFileStorageConfiguration FileSystem { get; }

    public DataSetStorageElement (XElement element)
    {
      Ttl = element?.Attribute("ttl")?.Value != null ? TimeSpan.Parse(element.Attribute("ttl").Value, CultureInfo.InvariantCulture) : default(TimeSpan?);
      Azure = element != null ? new DataSetAzureStorageElement(element.Element("azure")) : null;
      FileSystem = element != null ? new DataSetFileStorageElement(element.Element("fileSystem")) : null;
    }
  }

#endif

  public interface IDataSetAzureStorageConfiguration
  {
    string Container { get; }

  }

#if NETFRAMEWORK 

  public class DataSetAzureStorageElement : ConfigurationElement, IDataSetAzureStorageConfiguration
  {
    [ConfigurationProperty("container", IsRequired = true)]
    public string Container
    {
      get => (string)this["container"];
      set => this["container"] = value;
    }

  }

#else

  public class DataSetAzureStorageElement : IDataSetAzureStorageConfiguration
  { 
    public string Container { get; }

    public DataSetAzureStorageElement (XElement element)
    {
      Container = element?.Attribute("container")?.Value != null ? element.Attribute("container").Value : default(string);
    }
  }

#endif

  public interface IDataSetFileStorageConfiguration
  {
    string Store { get; }

  }

#if NETFRAMEWORK 

  public class DataSetFileStorageElement : ConfigurationElement, IDataSetFileStorageConfiguration
  {
    [ConfigurationProperty("store", IsRequired = true)]
    public string Store
    {
      get => (string)this["store"];
      set => this["store"] = value;
    }

  }

#else

  public class DataSetFileStorageElement : IDataSetFileStorageConfiguration
  { 
    public string Store { get; }

    public DataSetFileStorageElement (XElement element)
    {
      Store = element?.Attribute("store")?.Value != null ? element.Attribute("store").Value : default(string);
    }
  }

#endif

  public interface IPluginSystemConfiguration
  {
    IMetadataRegistriesConfiguration MetadataRegistries { get; }
  }

#if NETFRAMEWORK 

  public class PluginSystemElement : ConfigurationElement, IPluginSystemConfiguration
  {
    [ConfigurationProperty("metadataRegistries")]
    public MetadataRegistriesElement MetadataRegistries
    {
      get => (MetadataRegistriesElement)this["metadataRegistries"];
      set => this["metadataRegistries"] = value;
    }

    IMetadataRegistriesConfiguration IPluginSystemConfiguration.MetadataRegistries => MetadataRegistries;

  }

#else

  public class PluginSystemElement : IPluginSystemConfiguration
  { 
    public IMetadataRegistriesConfiguration MetadataRegistries { get; }

    public PluginSystemElement (XElement element)
    {
      MetadataRegistries = element != null ? new MetadataRegistriesElement(element.Element("metadataRegistries")) : null;
    }
  }

#endif

  public interface IMetadataRegistriesConfiguration
  {
    string UiComponentsMetadata { get; }

  }

#if NETFRAMEWORK 

  public class MetadataRegistriesElement : ConfigurationElement, IMetadataRegistriesConfiguration
  {
    [ConfigurationProperty("uiComponentsMetadata")]
    public string UiComponentsMetadata
    {
      get => (string)this["uiComponentsMetadata"];
      set => this["uiComponentsMetadata"] = value;
    }

  }

#else

  public class MetadataRegistriesElement : IMetadataRegistriesConfiguration
  { 
    public string UiComponentsMetadata { get; }

    public MetadataRegistriesElement (XElement element)
    {
      UiComponentsMetadata = element?.Attribute("uiComponentsMetadata")?.Value != null ? element.Attribute("uiComponentsMetadata").Value : default(string);
    }
  }

#endif

}

