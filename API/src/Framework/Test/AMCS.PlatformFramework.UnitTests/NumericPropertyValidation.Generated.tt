<#

var types = new[] {
    typeof(sbyte),
    typeof(byte),
    typeof(short),
    typeof(ushort),
    typeof(int),
    typeof(uint),
    typeof(long),
    typeof(ulong),
    typeof(float),
    typeof(double),
    typeof(decimal)
};

#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AMCS.PlatformFramework.UnitTests
{
  partial class NumericPropertyValidation
  {
    public class PropertyObject
    {
      public static PropertyObject WithValue(int value)
      {
        var obj = new PropertyObject();

<# foreach (var type in types) { #>
        obj.<#= type.Name #>Property = (<#= type.Name #>)value;
<# } #>

        return obj;
      }

<# foreach (var type in types) { #>
      public <#= type.Name #> <#= type.Name #>Property { get; set; }
<# } #>
    }
  }
}
